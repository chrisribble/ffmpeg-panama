// Generated by jextract

package com.chrisribble.ffmpeg6;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct AVOutputFormat {
 *     char* name;
 *     char* long_name;
 *     char* mime_type;
 *     char* extensions;
 *     enum AVCodecID audio_codec;
 *     enum AVCodecID video_codec;
 *     enum AVCodecID subtitle_codec;
 *     int flags;
 *     struct AVCodecTag** codec_tag;
 *     const AVClass* priv_class;
 * };
 * }
 */
public class AVOutputFormat {

    public static MemoryLayout $LAYOUT() {
        return constants$290.const$1;
    }
    public static VarHandle name$VH() {
        return constants$290.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* name;
     * }
     */
    public static MemorySegment name$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$290.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* name;
     * }
     */
    public static void name$set(MemorySegment seg, MemorySegment x) {
        constants$290.const$2.set(seg, x);
    }
    public static MemorySegment name$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$290.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void name$set(MemorySegment seg, long index, MemorySegment x) {
        constants$290.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle long_name$VH() {
        return constants$290.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* long_name;
     * }
     */
    public static MemorySegment long_name$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$290.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* long_name;
     * }
     */
    public static void long_name$set(MemorySegment seg, MemorySegment x) {
        constants$290.const$3.set(seg, x);
    }
    public static MemorySegment long_name$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$290.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void long_name$set(MemorySegment seg, long index, MemorySegment x) {
        constants$290.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle mime_type$VH() {
        return constants$290.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* mime_type;
     * }
     */
    public static MemorySegment mime_type$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$290.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* mime_type;
     * }
     */
    public static void mime_type$set(MemorySegment seg, MemorySegment x) {
        constants$290.const$4.set(seg, x);
    }
    public static MemorySegment mime_type$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$290.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void mime_type$set(MemorySegment seg, long index, MemorySegment x) {
        constants$290.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle extensions$VH() {
        return constants$290.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* extensions;
     * }
     */
    public static MemorySegment extensions$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$290.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* extensions;
     * }
     */
    public static void extensions$set(MemorySegment seg, MemorySegment x) {
        constants$290.const$5.set(seg, x);
    }
    public static MemorySegment extensions$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$290.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void extensions$set(MemorySegment seg, long index, MemorySegment x) {
        constants$290.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle audio_codec$VH() {
        return constants$291.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * enum AVCodecID audio_codec;
     * }
     */
    public static int audio_codec$get(MemorySegment seg) {
        return (int)constants$291.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * enum AVCodecID audio_codec;
     * }
     */
    public static void audio_codec$set(MemorySegment seg, int x) {
        constants$291.const$0.set(seg, x);
    }
    public static int audio_codec$get(MemorySegment seg, long index) {
        return (int)constants$291.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void audio_codec$set(MemorySegment seg, long index, int x) {
        constants$291.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle video_codec$VH() {
        return constants$291.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * enum AVCodecID video_codec;
     * }
     */
    public static int video_codec$get(MemorySegment seg) {
        return (int)constants$291.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * enum AVCodecID video_codec;
     * }
     */
    public static void video_codec$set(MemorySegment seg, int x) {
        constants$291.const$1.set(seg, x);
    }
    public static int video_codec$get(MemorySegment seg, long index) {
        return (int)constants$291.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void video_codec$set(MemorySegment seg, long index, int x) {
        constants$291.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle subtitle_codec$VH() {
        return constants$291.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * enum AVCodecID subtitle_codec;
     * }
     */
    public static int subtitle_codec$get(MemorySegment seg) {
        return (int)constants$291.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * enum AVCodecID subtitle_codec;
     * }
     */
    public static void subtitle_codec$set(MemorySegment seg, int x) {
        constants$291.const$2.set(seg, x);
    }
    public static int subtitle_codec$get(MemorySegment seg, long index) {
        return (int)constants$291.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void subtitle_codec$set(MemorySegment seg, long index, int x) {
        constants$291.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle flags$VH() {
        return constants$291.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int flags;
     * }
     */
    public static int flags$get(MemorySegment seg) {
        return (int)constants$291.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int flags;
     * }
     */
    public static void flags$set(MemorySegment seg, int x) {
        constants$291.const$3.set(seg, x);
    }
    public static int flags$get(MemorySegment seg, long index) {
        return (int)constants$291.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void flags$set(MemorySegment seg, long index, int x) {
        constants$291.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle codec_tag$VH() {
        return constants$291.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct AVCodecTag** codec_tag;
     * }
     */
    public static MemorySegment codec_tag$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$291.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct AVCodecTag** codec_tag;
     * }
     */
    public static void codec_tag$set(MemorySegment seg, MemorySegment x) {
        constants$291.const$4.set(seg, x);
    }
    public static MemorySegment codec_tag$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$291.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void codec_tag$set(MemorySegment seg, long index, MemorySegment x) {
        constants$291.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle priv_class$VH() {
        return constants$291.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * const AVClass* priv_class;
     * }
     */
    public static MemorySegment priv_class$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$291.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * const AVClass* priv_class;
     * }
     */
    public static void priv_class$set(MemorySegment seg, MemorySegment x) {
        constants$291.const$5.set(seg, x);
    }
    public static MemorySegment priv_class$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$291.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void priv_class$set(MemorySegment seg, long index, MemorySegment x) {
        constants$291.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


