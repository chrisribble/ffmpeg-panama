// Generated by jextract

package com.chrisribble.ffmpeg5;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct AVFormatContext {
 *     struct AVClass* av_class;
 *     struct AVInputFormat* iformat;
 *     struct AVOutputFormat* oformat;
 *     void* priv_data;
 *     struct AVIOContext* pb;
 *     int ctx_flags;
 *     unsigned int nb_streams;
 *     struct AVStream** streams;
 *     char* url;
 *     long start_time;
 *     long duration;
 *     long bit_rate;
 *     unsigned int packet_size;
 *     int max_delay;
 *     int flags;
 *     long probesize;
 *     long max_analyze_duration;
 *     unsigned char* key;
 *     int keylen;
 *     unsigned int nb_programs;
 *     struct AVProgram** programs;
 *     enum AVCodecID video_codec_id;
 *     enum AVCodecID audio_codec_id;
 *     enum AVCodecID subtitle_codec_id;
 *     unsigned int max_index_size;
 *     unsigned int max_picture_buffer;
 *     unsigned int nb_chapters;
 *     struct AVChapter** chapters;
 *     struct AVDictionary* metadata;
 *     long start_time_realtime;
 *     int fps_probe_size;
 *     int error_recognition;
 *     struct AVIOInterruptCB interrupt_callback;
 *     int debug;
 *     long max_interleave_delta;
 *     int strict_std_compliance;
 *     int event_flags;
 *     int max_ts_probe;
 *     int avoid_negative_ts;
 *     int ts_id;
 *     int audio_preload;
 *     int max_chunk_duration;
 *     int max_chunk_size;
 *     int use_wallclock_as_timestamps;
 *     int avio_flags;
 *     enum AVDurationEstimationMethod duration_estimation_method;
 *     long skip_initial_bytes;
 *     unsigned int correct_ts_overflow;
 *     int seek2any;
 *     int flush_packets;
 *     int probe_score;
 *     int format_probesize;
 *     char* codec_whitelist;
 *     char* format_whitelist;
 *     int io_repositioned;
 *     struct AVCodec* video_codec;
 *     struct AVCodec* audio_codec;
 *     struct AVCodec* subtitle_codec;
 *     struct AVCodec* data_codec;
 *     int metadata_header_padding;
 *     void* opaque;
 *     int (*control_message_cb)(struct AVFormatContext*,int,void*,unsigned long);
 *     long output_ts_offset;
 *     unsigned char* dump_separator;
 *     enum AVCodecID data_codec_id;
 *     char* protocol_whitelist;
 *     int (*io_open)(struct AVFormatContext*,struct AVIOContext**,char*,int,struct AVDictionary**);
 *     void (*io_close)(struct AVFormatContext*,struct AVIOContext*);
 *     char* protocol_blacklist;
 *     int max_streams;
 *     int skip_estimate_duration_from_pts;
 *     int max_probe_packets;
 *     int (*io_close2)(struct AVFormatContext*,struct AVIOContext*);
 * };
 * }
 */
public class AVFormatContext {

    public static MemoryLayout $LAYOUT() {
        return constants$312.const$5;
    }
    public static VarHandle av_class$VH() {
        return constants$313.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct AVClass* av_class;
     * }
     */
    public static MemorySegment av_class$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$313.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct AVClass* av_class;
     * }
     */
    public static void av_class$set(MemorySegment seg, MemorySegment x) {
        constants$313.const$0.set(seg, x);
    }
    public static MemorySegment av_class$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$313.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void av_class$set(MemorySegment seg, long index, MemorySegment x) {
        constants$313.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle iformat$VH() {
        return constants$313.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct AVInputFormat* iformat;
     * }
     */
    public static MemorySegment iformat$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$313.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct AVInputFormat* iformat;
     * }
     */
    public static void iformat$set(MemorySegment seg, MemorySegment x) {
        constants$313.const$1.set(seg, x);
    }
    public static MemorySegment iformat$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$313.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void iformat$set(MemorySegment seg, long index, MemorySegment x) {
        constants$313.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle oformat$VH() {
        return constants$313.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct AVOutputFormat* oformat;
     * }
     */
    public static MemorySegment oformat$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$313.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct AVOutputFormat* oformat;
     * }
     */
    public static void oformat$set(MemorySegment seg, MemorySegment x) {
        constants$313.const$2.set(seg, x);
    }
    public static MemorySegment oformat$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$313.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void oformat$set(MemorySegment seg, long index, MemorySegment x) {
        constants$313.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle priv_data$VH() {
        return constants$313.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* priv_data;
     * }
     */
    public static MemorySegment priv_data$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$313.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* priv_data;
     * }
     */
    public static void priv_data$set(MemorySegment seg, MemorySegment x) {
        constants$313.const$3.set(seg, x);
    }
    public static MemorySegment priv_data$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$313.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void priv_data$set(MemorySegment seg, long index, MemorySegment x) {
        constants$313.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pb$VH() {
        return constants$313.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct AVIOContext* pb;
     * }
     */
    public static MemorySegment pb$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$313.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct AVIOContext* pb;
     * }
     */
    public static void pb$set(MemorySegment seg, MemorySegment x) {
        constants$313.const$4.set(seg, x);
    }
    public static MemorySegment pb$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$313.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void pb$set(MemorySegment seg, long index, MemorySegment x) {
        constants$313.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ctx_flags$VH() {
        return constants$313.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int ctx_flags;
     * }
     */
    public static int ctx_flags$get(MemorySegment seg) {
        return (int)constants$313.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int ctx_flags;
     * }
     */
    public static void ctx_flags$set(MemorySegment seg, int x) {
        constants$313.const$5.set(seg, x);
    }
    public static int ctx_flags$get(MemorySegment seg, long index) {
        return (int)constants$313.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void ctx_flags$set(MemorySegment seg, long index, int x) {
        constants$313.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle nb_streams$VH() {
        return constants$314.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int nb_streams;
     * }
     */
    public static int nb_streams$get(MemorySegment seg) {
        return (int)constants$314.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int nb_streams;
     * }
     */
    public static void nb_streams$set(MemorySegment seg, int x) {
        constants$314.const$0.set(seg, x);
    }
    public static int nb_streams$get(MemorySegment seg, long index) {
        return (int)constants$314.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void nb_streams$set(MemorySegment seg, long index, int x) {
        constants$314.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle streams$VH() {
        return constants$314.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct AVStream** streams;
     * }
     */
    public static MemorySegment streams$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$314.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct AVStream** streams;
     * }
     */
    public static void streams$set(MemorySegment seg, MemorySegment x) {
        constants$314.const$1.set(seg, x);
    }
    public static MemorySegment streams$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$314.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void streams$set(MemorySegment seg, long index, MemorySegment x) {
        constants$314.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle url$VH() {
        return constants$314.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* url;
     * }
     */
    public static MemorySegment url$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$314.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* url;
     * }
     */
    public static void url$set(MemorySegment seg, MemorySegment x) {
        constants$314.const$2.set(seg, x);
    }
    public static MemorySegment url$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$314.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void url$set(MemorySegment seg, long index, MemorySegment x) {
        constants$314.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle start_time$VH() {
        return constants$314.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * long start_time;
     * }
     */
    public static long start_time$get(MemorySegment seg) {
        return (long)constants$314.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * long start_time;
     * }
     */
    public static void start_time$set(MemorySegment seg, long x) {
        constants$314.const$3.set(seg, x);
    }
    public static long start_time$get(MemorySegment seg, long index) {
        return (long)constants$314.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void start_time$set(MemorySegment seg, long index, long x) {
        constants$314.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle duration$VH() {
        return constants$314.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * long duration;
     * }
     */
    public static long duration$get(MemorySegment seg) {
        return (long)constants$314.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * long duration;
     * }
     */
    public static void duration$set(MemorySegment seg, long x) {
        constants$314.const$4.set(seg, x);
    }
    public static long duration$get(MemorySegment seg, long index) {
        return (long)constants$314.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void duration$set(MemorySegment seg, long index, long x) {
        constants$314.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle bit_rate$VH() {
        return constants$314.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * long bit_rate;
     * }
     */
    public static long bit_rate$get(MemorySegment seg) {
        return (long)constants$314.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * long bit_rate;
     * }
     */
    public static void bit_rate$set(MemorySegment seg, long x) {
        constants$314.const$5.set(seg, x);
    }
    public static long bit_rate$get(MemorySegment seg, long index) {
        return (long)constants$314.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void bit_rate$set(MemorySegment seg, long index, long x) {
        constants$314.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle packet_size$VH() {
        return constants$315.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int packet_size;
     * }
     */
    public static int packet_size$get(MemorySegment seg) {
        return (int)constants$315.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int packet_size;
     * }
     */
    public static void packet_size$set(MemorySegment seg, int x) {
        constants$315.const$0.set(seg, x);
    }
    public static int packet_size$get(MemorySegment seg, long index) {
        return (int)constants$315.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void packet_size$set(MemorySegment seg, long index, int x) {
        constants$315.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle max_delay$VH() {
        return constants$315.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int max_delay;
     * }
     */
    public static int max_delay$get(MemorySegment seg) {
        return (int)constants$315.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int max_delay;
     * }
     */
    public static void max_delay$set(MemorySegment seg, int x) {
        constants$315.const$1.set(seg, x);
    }
    public static int max_delay$get(MemorySegment seg, long index) {
        return (int)constants$315.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void max_delay$set(MemorySegment seg, long index, int x) {
        constants$315.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle flags$VH() {
        return constants$315.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int flags;
     * }
     */
    public static int flags$get(MemorySegment seg) {
        return (int)constants$315.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int flags;
     * }
     */
    public static void flags$set(MemorySegment seg, int x) {
        constants$315.const$2.set(seg, x);
    }
    public static int flags$get(MemorySegment seg, long index) {
        return (int)constants$315.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void flags$set(MemorySegment seg, long index, int x) {
        constants$315.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle probesize$VH() {
        return constants$315.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * long probesize;
     * }
     */
    public static long probesize$get(MemorySegment seg) {
        return (long)constants$315.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * long probesize;
     * }
     */
    public static void probesize$set(MemorySegment seg, long x) {
        constants$315.const$3.set(seg, x);
    }
    public static long probesize$get(MemorySegment seg, long index) {
        return (long)constants$315.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void probesize$set(MemorySegment seg, long index, long x) {
        constants$315.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle max_analyze_duration$VH() {
        return constants$315.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * long max_analyze_duration;
     * }
     */
    public static long max_analyze_duration$get(MemorySegment seg) {
        return (long)constants$315.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * long max_analyze_duration;
     * }
     */
    public static void max_analyze_duration$set(MemorySegment seg, long x) {
        constants$315.const$4.set(seg, x);
    }
    public static long max_analyze_duration$get(MemorySegment seg, long index) {
        return (long)constants$315.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void max_analyze_duration$set(MemorySegment seg, long index, long x) {
        constants$315.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle key$VH() {
        return constants$315.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned char* key;
     * }
     */
    public static MemorySegment key$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$315.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned char* key;
     * }
     */
    public static void key$set(MemorySegment seg, MemorySegment x) {
        constants$315.const$5.set(seg, x);
    }
    public static MemorySegment key$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$315.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void key$set(MemorySegment seg, long index, MemorySegment x) {
        constants$315.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle keylen$VH() {
        return constants$316.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int keylen;
     * }
     */
    public static int keylen$get(MemorySegment seg) {
        return (int)constants$316.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int keylen;
     * }
     */
    public static void keylen$set(MemorySegment seg, int x) {
        constants$316.const$0.set(seg, x);
    }
    public static int keylen$get(MemorySegment seg, long index) {
        return (int)constants$316.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void keylen$set(MemorySegment seg, long index, int x) {
        constants$316.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle nb_programs$VH() {
        return constants$316.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int nb_programs;
     * }
     */
    public static int nb_programs$get(MemorySegment seg) {
        return (int)constants$316.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int nb_programs;
     * }
     */
    public static void nb_programs$set(MemorySegment seg, int x) {
        constants$316.const$1.set(seg, x);
    }
    public static int nb_programs$get(MemorySegment seg, long index) {
        return (int)constants$316.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void nb_programs$set(MemorySegment seg, long index, int x) {
        constants$316.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle programs$VH() {
        return constants$316.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct AVProgram** programs;
     * }
     */
    public static MemorySegment programs$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$316.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct AVProgram** programs;
     * }
     */
    public static void programs$set(MemorySegment seg, MemorySegment x) {
        constants$316.const$2.set(seg, x);
    }
    public static MemorySegment programs$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$316.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void programs$set(MemorySegment seg, long index, MemorySegment x) {
        constants$316.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle video_codec_id$VH() {
        return constants$316.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * enum AVCodecID video_codec_id;
     * }
     */
    public static int video_codec_id$get(MemorySegment seg) {
        return (int)constants$316.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * enum AVCodecID video_codec_id;
     * }
     */
    public static void video_codec_id$set(MemorySegment seg, int x) {
        constants$316.const$3.set(seg, x);
    }
    public static int video_codec_id$get(MemorySegment seg, long index) {
        return (int)constants$316.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void video_codec_id$set(MemorySegment seg, long index, int x) {
        constants$316.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle audio_codec_id$VH() {
        return constants$316.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * enum AVCodecID audio_codec_id;
     * }
     */
    public static int audio_codec_id$get(MemorySegment seg) {
        return (int)constants$316.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * enum AVCodecID audio_codec_id;
     * }
     */
    public static void audio_codec_id$set(MemorySegment seg, int x) {
        constants$316.const$4.set(seg, x);
    }
    public static int audio_codec_id$get(MemorySegment seg, long index) {
        return (int)constants$316.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void audio_codec_id$set(MemorySegment seg, long index, int x) {
        constants$316.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle subtitle_codec_id$VH() {
        return constants$316.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * enum AVCodecID subtitle_codec_id;
     * }
     */
    public static int subtitle_codec_id$get(MemorySegment seg) {
        return (int)constants$316.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * enum AVCodecID subtitle_codec_id;
     * }
     */
    public static void subtitle_codec_id$set(MemorySegment seg, int x) {
        constants$316.const$5.set(seg, x);
    }
    public static int subtitle_codec_id$get(MemorySegment seg, long index) {
        return (int)constants$316.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void subtitle_codec_id$set(MemorySegment seg, long index, int x) {
        constants$316.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle max_index_size$VH() {
        return constants$317.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int max_index_size;
     * }
     */
    public static int max_index_size$get(MemorySegment seg) {
        return (int)constants$317.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int max_index_size;
     * }
     */
    public static void max_index_size$set(MemorySegment seg, int x) {
        constants$317.const$0.set(seg, x);
    }
    public static int max_index_size$get(MemorySegment seg, long index) {
        return (int)constants$317.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void max_index_size$set(MemorySegment seg, long index, int x) {
        constants$317.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle max_picture_buffer$VH() {
        return constants$317.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int max_picture_buffer;
     * }
     */
    public static int max_picture_buffer$get(MemorySegment seg) {
        return (int)constants$317.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int max_picture_buffer;
     * }
     */
    public static void max_picture_buffer$set(MemorySegment seg, int x) {
        constants$317.const$1.set(seg, x);
    }
    public static int max_picture_buffer$get(MemorySegment seg, long index) {
        return (int)constants$317.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void max_picture_buffer$set(MemorySegment seg, long index, int x) {
        constants$317.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle nb_chapters$VH() {
        return constants$317.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int nb_chapters;
     * }
     */
    public static int nb_chapters$get(MemorySegment seg) {
        return (int)constants$317.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int nb_chapters;
     * }
     */
    public static void nb_chapters$set(MemorySegment seg, int x) {
        constants$317.const$2.set(seg, x);
    }
    public static int nb_chapters$get(MemorySegment seg, long index) {
        return (int)constants$317.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void nb_chapters$set(MemorySegment seg, long index, int x) {
        constants$317.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle chapters$VH() {
        return constants$317.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct AVChapter** chapters;
     * }
     */
    public static MemorySegment chapters$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$317.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct AVChapter** chapters;
     * }
     */
    public static void chapters$set(MemorySegment seg, MemorySegment x) {
        constants$317.const$3.set(seg, x);
    }
    public static MemorySegment chapters$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$317.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void chapters$set(MemorySegment seg, long index, MemorySegment x) {
        constants$317.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle metadata$VH() {
        return constants$317.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct AVDictionary* metadata;
     * }
     */
    public static MemorySegment metadata$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$317.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct AVDictionary* metadata;
     * }
     */
    public static void metadata$set(MemorySegment seg, MemorySegment x) {
        constants$317.const$4.set(seg, x);
    }
    public static MemorySegment metadata$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$317.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void metadata$set(MemorySegment seg, long index, MemorySegment x) {
        constants$317.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle start_time_realtime$VH() {
        return constants$317.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * long start_time_realtime;
     * }
     */
    public static long start_time_realtime$get(MemorySegment seg) {
        return (long)constants$317.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * long start_time_realtime;
     * }
     */
    public static void start_time_realtime$set(MemorySegment seg, long x) {
        constants$317.const$5.set(seg, x);
    }
    public static long start_time_realtime$get(MemorySegment seg, long index) {
        return (long)constants$317.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void start_time_realtime$set(MemorySegment seg, long index, long x) {
        constants$317.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle fps_probe_size$VH() {
        return constants$318.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int fps_probe_size;
     * }
     */
    public static int fps_probe_size$get(MemorySegment seg) {
        return (int)constants$318.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int fps_probe_size;
     * }
     */
    public static void fps_probe_size$set(MemorySegment seg, int x) {
        constants$318.const$0.set(seg, x);
    }
    public static int fps_probe_size$get(MemorySegment seg, long index) {
        return (int)constants$318.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void fps_probe_size$set(MemorySegment seg, long index, int x) {
        constants$318.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle error_recognition$VH() {
        return constants$318.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int error_recognition;
     * }
     */
    public static int error_recognition$get(MemorySegment seg) {
        return (int)constants$318.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int error_recognition;
     * }
     */
    public static void error_recognition$set(MemorySegment seg, int x) {
        constants$318.const$1.set(seg, x);
    }
    public static int error_recognition$get(MemorySegment seg, long index) {
        return (int)constants$318.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void error_recognition$set(MemorySegment seg, long index, int x) {
        constants$318.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment interrupt_callback$slice(MemorySegment seg) {
        return seg.asSlice(200, 16);
    }
    public static VarHandle debug$VH() {
        return constants$318.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int debug;
     * }
     */
    public static int debug$get(MemorySegment seg) {
        return (int)constants$318.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int debug;
     * }
     */
    public static void debug$set(MemorySegment seg, int x) {
        constants$318.const$2.set(seg, x);
    }
    public static int debug$get(MemorySegment seg, long index) {
        return (int)constants$318.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void debug$set(MemorySegment seg, long index, int x) {
        constants$318.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle max_interleave_delta$VH() {
        return constants$318.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * long max_interleave_delta;
     * }
     */
    public static long max_interleave_delta$get(MemorySegment seg) {
        return (long)constants$318.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * long max_interleave_delta;
     * }
     */
    public static void max_interleave_delta$set(MemorySegment seg, long x) {
        constants$318.const$3.set(seg, x);
    }
    public static long max_interleave_delta$get(MemorySegment seg, long index) {
        return (long)constants$318.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void max_interleave_delta$set(MemorySegment seg, long index, long x) {
        constants$318.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle strict_std_compliance$VH() {
        return constants$318.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int strict_std_compliance;
     * }
     */
    public static int strict_std_compliance$get(MemorySegment seg) {
        return (int)constants$318.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int strict_std_compliance;
     * }
     */
    public static void strict_std_compliance$set(MemorySegment seg, int x) {
        constants$318.const$4.set(seg, x);
    }
    public static int strict_std_compliance$get(MemorySegment seg, long index) {
        return (int)constants$318.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void strict_std_compliance$set(MemorySegment seg, long index, int x) {
        constants$318.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle event_flags$VH() {
        return constants$318.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int event_flags;
     * }
     */
    public static int event_flags$get(MemorySegment seg) {
        return (int)constants$318.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int event_flags;
     * }
     */
    public static void event_flags$set(MemorySegment seg, int x) {
        constants$318.const$5.set(seg, x);
    }
    public static int event_flags$get(MemorySegment seg, long index) {
        return (int)constants$318.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void event_flags$set(MemorySegment seg, long index, int x) {
        constants$318.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle max_ts_probe$VH() {
        return constants$319.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int max_ts_probe;
     * }
     */
    public static int max_ts_probe$get(MemorySegment seg) {
        return (int)constants$319.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int max_ts_probe;
     * }
     */
    public static void max_ts_probe$set(MemorySegment seg, int x) {
        constants$319.const$0.set(seg, x);
    }
    public static int max_ts_probe$get(MemorySegment seg, long index) {
        return (int)constants$319.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void max_ts_probe$set(MemorySegment seg, long index, int x) {
        constants$319.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle avoid_negative_ts$VH() {
        return constants$319.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int avoid_negative_ts;
     * }
     */
    public static int avoid_negative_ts$get(MemorySegment seg) {
        return (int)constants$319.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int avoid_negative_ts;
     * }
     */
    public static void avoid_negative_ts$set(MemorySegment seg, int x) {
        constants$319.const$1.set(seg, x);
    }
    public static int avoid_negative_ts$get(MemorySegment seg, long index) {
        return (int)constants$319.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void avoid_negative_ts$set(MemorySegment seg, long index, int x) {
        constants$319.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ts_id$VH() {
        return constants$319.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int ts_id;
     * }
     */
    public static int ts_id$get(MemorySegment seg) {
        return (int)constants$319.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int ts_id;
     * }
     */
    public static void ts_id$set(MemorySegment seg, int x) {
        constants$319.const$2.set(seg, x);
    }
    public static int ts_id$get(MemorySegment seg, long index) {
        return (int)constants$319.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void ts_id$set(MemorySegment seg, long index, int x) {
        constants$319.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle audio_preload$VH() {
        return constants$319.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int audio_preload;
     * }
     */
    public static int audio_preload$get(MemorySegment seg) {
        return (int)constants$319.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int audio_preload;
     * }
     */
    public static void audio_preload$set(MemorySegment seg, int x) {
        constants$319.const$3.set(seg, x);
    }
    public static int audio_preload$get(MemorySegment seg, long index) {
        return (int)constants$319.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void audio_preload$set(MemorySegment seg, long index, int x) {
        constants$319.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle max_chunk_duration$VH() {
        return constants$319.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int max_chunk_duration;
     * }
     */
    public static int max_chunk_duration$get(MemorySegment seg) {
        return (int)constants$319.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int max_chunk_duration;
     * }
     */
    public static void max_chunk_duration$set(MemorySegment seg, int x) {
        constants$319.const$4.set(seg, x);
    }
    public static int max_chunk_duration$get(MemorySegment seg, long index) {
        return (int)constants$319.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void max_chunk_duration$set(MemorySegment seg, long index, int x) {
        constants$319.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle max_chunk_size$VH() {
        return constants$319.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int max_chunk_size;
     * }
     */
    public static int max_chunk_size$get(MemorySegment seg) {
        return (int)constants$319.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int max_chunk_size;
     * }
     */
    public static void max_chunk_size$set(MemorySegment seg, int x) {
        constants$319.const$5.set(seg, x);
    }
    public static int max_chunk_size$get(MemorySegment seg, long index) {
        return (int)constants$319.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void max_chunk_size$set(MemorySegment seg, long index, int x) {
        constants$319.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle use_wallclock_as_timestamps$VH() {
        return constants$320.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int use_wallclock_as_timestamps;
     * }
     */
    public static int use_wallclock_as_timestamps$get(MemorySegment seg) {
        return (int)constants$320.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int use_wallclock_as_timestamps;
     * }
     */
    public static void use_wallclock_as_timestamps$set(MemorySegment seg, int x) {
        constants$320.const$0.set(seg, x);
    }
    public static int use_wallclock_as_timestamps$get(MemorySegment seg, long index) {
        return (int)constants$320.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void use_wallclock_as_timestamps$set(MemorySegment seg, long index, int x) {
        constants$320.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle avio_flags$VH() {
        return constants$320.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int avio_flags;
     * }
     */
    public static int avio_flags$get(MemorySegment seg) {
        return (int)constants$320.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int avio_flags;
     * }
     */
    public static void avio_flags$set(MemorySegment seg, int x) {
        constants$320.const$1.set(seg, x);
    }
    public static int avio_flags$get(MemorySegment seg, long index) {
        return (int)constants$320.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void avio_flags$set(MemorySegment seg, long index, int x) {
        constants$320.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle duration_estimation_method$VH() {
        return constants$320.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * enum AVDurationEstimationMethod duration_estimation_method;
     * }
     */
    public static int duration_estimation_method$get(MemorySegment seg) {
        return (int)constants$320.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * enum AVDurationEstimationMethod duration_estimation_method;
     * }
     */
    public static void duration_estimation_method$set(MemorySegment seg, int x) {
        constants$320.const$2.set(seg, x);
    }
    public static int duration_estimation_method$get(MemorySegment seg, long index) {
        return (int)constants$320.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void duration_estimation_method$set(MemorySegment seg, long index, int x) {
        constants$320.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle skip_initial_bytes$VH() {
        return constants$320.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * long skip_initial_bytes;
     * }
     */
    public static long skip_initial_bytes$get(MemorySegment seg) {
        return (long)constants$320.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * long skip_initial_bytes;
     * }
     */
    public static void skip_initial_bytes$set(MemorySegment seg, long x) {
        constants$320.const$3.set(seg, x);
    }
    public static long skip_initial_bytes$get(MemorySegment seg, long index) {
        return (long)constants$320.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void skip_initial_bytes$set(MemorySegment seg, long index, long x) {
        constants$320.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle correct_ts_overflow$VH() {
        return constants$320.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int correct_ts_overflow;
     * }
     */
    public static int correct_ts_overflow$get(MemorySegment seg) {
        return (int)constants$320.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int correct_ts_overflow;
     * }
     */
    public static void correct_ts_overflow$set(MemorySegment seg, int x) {
        constants$320.const$4.set(seg, x);
    }
    public static int correct_ts_overflow$get(MemorySegment seg, long index) {
        return (int)constants$320.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void correct_ts_overflow$set(MemorySegment seg, long index, int x) {
        constants$320.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle seek2any$VH() {
        return constants$320.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int seek2any;
     * }
     */
    public static int seek2any$get(MemorySegment seg) {
        return (int)constants$320.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int seek2any;
     * }
     */
    public static void seek2any$set(MemorySegment seg, int x) {
        constants$320.const$5.set(seg, x);
    }
    public static int seek2any$get(MemorySegment seg, long index) {
        return (int)constants$320.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void seek2any$set(MemorySegment seg, long index, int x) {
        constants$320.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle flush_packets$VH() {
        return constants$321.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int flush_packets;
     * }
     */
    public static int flush_packets$get(MemorySegment seg) {
        return (int)constants$321.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int flush_packets;
     * }
     */
    public static void flush_packets$set(MemorySegment seg, int x) {
        constants$321.const$0.set(seg, x);
    }
    public static int flush_packets$get(MemorySegment seg, long index) {
        return (int)constants$321.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void flush_packets$set(MemorySegment seg, long index, int x) {
        constants$321.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle probe_score$VH() {
        return constants$321.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int probe_score;
     * }
     */
    public static int probe_score$get(MemorySegment seg) {
        return (int)constants$321.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int probe_score;
     * }
     */
    public static void probe_score$set(MemorySegment seg, int x) {
        constants$321.const$1.set(seg, x);
    }
    public static int probe_score$get(MemorySegment seg, long index) {
        return (int)constants$321.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void probe_score$set(MemorySegment seg, long index, int x) {
        constants$321.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle format_probesize$VH() {
        return constants$321.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int format_probesize;
     * }
     */
    public static int format_probesize$get(MemorySegment seg) {
        return (int)constants$321.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int format_probesize;
     * }
     */
    public static void format_probesize$set(MemorySegment seg, int x) {
        constants$321.const$2.set(seg, x);
    }
    public static int format_probesize$get(MemorySegment seg, long index) {
        return (int)constants$321.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void format_probesize$set(MemorySegment seg, long index, int x) {
        constants$321.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle codec_whitelist$VH() {
        return constants$321.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* codec_whitelist;
     * }
     */
    public static MemorySegment codec_whitelist$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$321.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* codec_whitelist;
     * }
     */
    public static void codec_whitelist$set(MemorySegment seg, MemorySegment x) {
        constants$321.const$3.set(seg, x);
    }
    public static MemorySegment codec_whitelist$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$321.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void codec_whitelist$set(MemorySegment seg, long index, MemorySegment x) {
        constants$321.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle format_whitelist$VH() {
        return constants$321.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* format_whitelist;
     * }
     */
    public static MemorySegment format_whitelist$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$321.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* format_whitelist;
     * }
     */
    public static void format_whitelist$set(MemorySegment seg, MemorySegment x) {
        constants$321.const$4.set(seg, x);
    }
    public static MemorySegment format_whitelist$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$321.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void format_whitelist$set(MemorySegment seg, long index, MemorySegment x) {
        constants$321.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle io_repositioned$VH() {
        return constants$321.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int io_repositioned;
     * }
     */
    public static int io_repositioned$get(MemorySegment seg) {
        return (int)constants$321.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int io_repositioned;
     * }
     */
    public static void io_repositioned$set(MemorySegment seg, int x) {
        constants$321.const$5.set(seg, x);
    }
    public static int io_repositioned$get(MemorySegment seg, long index) {
        return (int)constants$321.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void io_repositioned$set(MemorySegment seg, long index, int x) {
        constants$321.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle video_codec$VH() {
        return constants$322.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct AVCodec* video_codec;
     * }
     */
    public static MemorySegment video_codec$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$322.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct AVCodec* video_codec;
     * }
     */
    public static void video_codec$set(MemorySegment seg, MemorySegment x) {
        constants$322.const$0.set(seg, x);
    }
    public static MemorySegment video_codec$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$322.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void video_codec$set(MemorySegment seg, long index, MemorySegment x) {
        constants$322.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle audio_codec$VH() {
        return constants$322.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct AVCodec* audio_codec;
     * }
     */
    public static MemorySegment audio_codec$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$322.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct AVCodec* audio_codec;
     * }
     */
    public static void audio_codec$set(MemorySegment seg, MemorySegment x) {
        constants$322.const$1.set(seg, x);
    }
    public static MemorySegment audio_codec$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$322.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void audio_codec$set(MemorySegment seg, long index, MemorySegment x) {
        constants$322.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle subtitle_codec$VH() {
        return constants$322.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct AVCodec* subtitle_codec;
     * }
     */
    public static MemorySegment subtitle_codec$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$322.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct AVCodec* subtitle_codec;
     * }
     */
    public static void subtitle_codec$set(MemorySegment seg, MemorySegment x) {
        constants$322.const$2.set(seg, x);
    }
    public static MemorySegment subtitle_codec$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$322.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void subtitle_codec$set(MemorySegment seg, long index, MemorySegment x) {
        constants$322.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle data_codec$VH() {
        return constants$322.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct AVCodec* data_codec;
     * }
     */
    public static MemorySegment data_codec$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$322.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct AVCodec* data_codec;
     * }
     */
    public static void data_codec$set(MemorySegment seg, MemorySegment x) {
        constants$322.const$3.set(seg, x);
    }
    public static MemorySegment data_codec$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$322.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void data_codec$set(MemorySegment seg, long index, MemorySegment x) {
        constants$322.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle metadata_header_padding$VH() {
        return constants$322.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int metadata_header_padding;
     * }
     */
    public static int metadata_header_padding$get(MemorySegment seg) {
        return (int)constants$322.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int metadata_header_padding;
     * }
     */
    public static void metadata_header_padding$set(MemorySegment seg, int x) {
        constants$322.const$4.set(seg, x);
    }
    public static int metadata_header_padding$get(MemorySegment seg, long index) {
        return (int)constants$322.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void metadata_header_padding$set(MemorySegment seg, long index, int x) {
        constants$322.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle opaque$VH() {
        return constants$322.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* opaque;
     * }
     */
    public static MemorySegment opaque$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$322.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* opaque;
     * }
     */
    public static void opaque$set(MemorySegment seg, MemorySegment x) {
        constants$322.const$5.set(seg, x);
    }
    public static MemorySegment opaque$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$322.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void opaque$set(MemorySegment seg, long index, MemorySegment x) {
        constants$322.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    /**
     * {@snippet :
 * int (*control_message_cb)(struct AVFormatContext*,int,void*,unsigned long);
     * }
     */
    public interface control_message_cb {

        int apply(java.lang.foreign.MemorySegment s, int type, java.lang.foreign.MemorySegment data, long data_size);
        static MemorySegment allocate(control_message_cb fi, Arena scope) {
            return RuntimeHelper.upcallStub(constants$323.const$0, fi, constants$205.const$5, scope);
        }
        static control_message_cb ofAddress(MemorySegment addr, Arena arena) {
            MemorySegment symbol = addr.reinterpret(arena, null);
            return (java.lang.foreign.MemorySegment _s, int _type, java.lang.foreign.MemorySegment _data, long _data_size) -> {
                try {
                    return (int)constants$296.const$3.invokeExact(symbol, _s, _type, _data, _data_size);
                } catch (Throwable ex$) {
                    throw new AssertionError("should not reach here", ex$);
                }
            };
        }
    }

    public static VarHandle control_message_cb$VH() {
        return constants$323.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int (*control_message_cb)(struct AVFormatContext*,int,void*,unsigned long);
     * }
     */
    public static MemorySegment control_message_cb$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$323.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int (*control_message_cb)(struct AVFormatContext*,int,void*,unsigned long);
     * }
     */
    public static void control_message_cb$set(MemorySegment seg, MemorySegment x) {
        constants$323.const$1.set(seg, x);
    }
    public static MemorySegment control_message_cb$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$323.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void control_message_cb$set(MemorySegment seg, long index, MemorySegment x) {
        constants$323.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static control_message_cb control_message_cb(MemorySegment segment, Arena scope) {
        return control_message_cb.ofAddress(control_message_cb$get(segment), scope);
    }
    public static VarHandle output_ts_offset$VH() {
        return constants$323.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * long output_ts_offset;
     * }
     */
    public static long output_ts_offset$get(MemorySegment seg) {
        return (long)constants$323.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * long output_ts_offset;
     * }
     */
    public static void output_ts_offset$set(MemorySegment seg, long x) {
        constants$323.const$2.set(seg, x);
    }
    public static long output_ts_offset$get(MemorySegment seg, long index) {
        return (long)constants$323.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void output_ts_offset$set(MemorySegment seg, long index, long x) {
        constants$323.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dump_separator$VH() {
        return constants$323.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned char* dump_separator;
     * }
     */
    public static MemorySegment dump_separator$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$323.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned char* dump_separator;
     * }
     */
    public static void dump_separator$set(MemorySegment seg, MemorySegment x) {
        constants$323.const$3.set(seg, x);
    }
    public static MemorySegment dump_separator$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$323.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void dump_separator$set(MemorySegment seg, long index, MemorySegment x) {
        constants$323.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle data_codec_id$VH() {
        return constants$323.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * enum AVCodecID data_codec_id;
     * }
     */
    public static int data_codec_id$get(MemorySegment seg) {
        return (int)constants$323.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * enum AVCodecID data_codec_id;
     * }
     */
    public static void data_codec_id$set(MemorySegment seg, int x) {
        constants$323.const$4.set(seg, x);
    }
    public static int data_codec_id$get(MemorySegment seg, long index) {
        return (int)constants$323.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void data_codec_id$set(MemorySegment seg, long index, int x) {
        constants$323.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle protocol_whitelist$VH() {
        return constants$323.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* protocol_whitelist;
     * }
     */
    public static MemorySegment protocol_whitelist$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$323.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* protocol_whitelist;
     * }
     */
    public static void protocol_whitelist$set(MemorySegment seg, MemorySegment x) {
        constants$323.const$5.set(seg, x);
    }
    public static MemorySegment protocol_whitelist$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$323.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void protocol_whitelist$set(MemorySegment seg, long index, MemorySegment x) {
        constants$323.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    /**
     * {@snippet :
 * int (*io_open)(struct AVFormatContext*,struct AVIOContext**,char*,int,struct AVDictionary**);
     * }
     */
    public interface io_open {

        int apply(java.lang.foreign.MemorySegment _x0, java.lang.foreign.MemorySegment _x1, java.lang.foreign.MemorySegment _x2, int _x3, java.lang.foreign.MemorySegment _x4);
        static MemorySegment allocate(io_open fi, Arena scope) {
            return RuntimeHelper.upcallStub(constants$324.const$1, fi, constants$324.const$0, scope);
        }
        static io_open ofAddress(MemorySegment addr, Arena arena) {
            MemorySegment symbol = addr.reinterpret(arena, null);
            return (java.lang.foreign.MemorySegment __x0, java.lang.foreign.MemorySegment __x1, java.lang.foreign.MemorySegment __x2, int __x3, java.lang.foreign.MemorySegment __x4) -> {
                try {
                    return (int)constants$324.const$2.invokeExact(symbol, __x0, __x1, __x2, __x3, __x4);
                } catch (Throwable ex$) {
                    throw new AssertionError("should not reach here", ex$);
                }
            };
        }
    }

    public static VarHandle io_open$VH() {
        return constants$324.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int (*io_open)(struct AVFormatContext*,struct AVIOContext**,char*,int,struct AVDictionary**);
     * }
     */
    public static MemorySegment io_open$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$324.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int (*io_open)(struct AVFormatContext*,struct AVIOContext**,char*,int,struct AVDictionary**);
     * }
     */
    public static void io_open$set(MemorySegment seg, MemorySegment x) {
        constants$324.const$3.set(seg, x);
    }
    public static MemorySegment io_open$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$324.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void io_open$set(MemorySegment seg, long index, MemorySegment x) {
        constants$324.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static io_open io_open(MemorySegment segment, Arena scope) {
        return io_open.ofAddress(io_open$get(segment), scope);
    }
    /**
     * {@snippet :
 * void (*io_close)(struct AVFormatContext*,struct AVIOContext*);
     * }
     */
    public interface io_close {

        void apply(java.lang.foreign.MemorySegment _x0, java.lang.foreign.MemorySegment _x1);
        static MemorySegment allocate(io_close fi, Arena scope) {
            return RuntimeHelper.upcallStub(constants$324.const$4, fi, constants$69.const$3, scope);
        }
        static io_close ofAddress(MemorySegment addr, Arena arena) {
            MemorySegment symbol = addr.reinterpret(arena, null);
            return (java.lang.foreign.MemorySegment __x0, java.lang.foreign.MemorySegment __x1) -> {
                try {
                    constants$149.const$4.invokeExact(symbol, __x0, __x1);
                } catch (Throwable ex$) {
                    throw new AssertionError("should not reach here", ex$);
                }
            };
        }
    }

    public static VarHandle io_close$VH() {
        return constants$324.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void (*io_close)(struct AVFormatContext*,struct AVIOContext*);
     * }
     */
    public static MemorySegment io_close$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$324.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void (*io_close)(struct AVFormatContext*,struct AVIOContext*);
     * }
     */
    public static void io_close$set(MemorySegment seg, MemorySegment x) {
        constants$324.const$5.set(seg, x);
    }
    public static MemorySegment io_close$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$324.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void io_close$set(MemorySegment seg, long index, MemorySegment x) {
        constants$324.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static io_close io_close(MemorySegment segment, Arena scope) {
        return io_close.ofAddress(io_close$get(segment), scope);
    }
    public static VarHandle protocol_blacklist$VH() {
        return constants$325.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* protocol_blacklist;
     * }
     */
    public static MemorySegment protocol_blacklist$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$325.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* protocol_blacklist;
     * }
     */
    public static void protocol_blacklist$set(MemorySegment seg, MemorySegment x) {
        constants$325.const$0.set(seg, x);
    }
    public static MemorySegment protocol_blacklist$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$325.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void protocol_blacklist$set(MemorySegment seg, long index, MemorySegment x) {
        constants$325.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle max_streams$VH() {
        return constants$325.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int max_streams;
     * }
     */
    public static int max_streams$get(MemorySegment seg) {
        return (int)constants$325.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int max_streams;
     * }
     */
    public static void max_streams$set(MemorySegment seg, int x) {
        constants$325.const$1.set(seg, x);
    }
    public static int max_streams$get(MemorySegment seg, long index) {
        return (int)constants$325.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void max_streams$set(MemorySegment seg, long index, int x) {
        constants$325.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle skip_estimate_duration_from_pts$VH() {
        return constants$325.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int skip_estimate_duration_from_pts;
     * }
     */
    public static int skip_estimate_duration_from_pts$get(MemorySegment seg) {
        return (int)constants$325.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int skip_estimate_duration_from_pts;
     * }
     */
    public static void skip_estimate_duration_from_pts$set(MemorySegment seg, int x) {
        constants$325.const$2.set(seg, x);
    }
    public static int skip_estimate_duration_from_pts$get(MemorySegment seg, long index) {
        return (int)constants$325.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void skip_estimate_duration_from_pts$set(MemorySegment seg, long index, int x) {
        constants$325.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle max_probe_packets$VH() {
        return constants$325.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int max_probe_packets;
     * }
     */
    public static int max_probe_packets$get(MemorySegment seg) {
        return (int)constants$325.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int max_probe_packets;
     * }
     */
    public static void max_probe_packets$set(MemorySegment seg, int x) {
        constants$325.const$3.set(seg, x);
    }
    public static int max_probe_packets$get(MemorySegment seg, long index) {
        return (int)constants$325.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void max_probe_packets$set(MemorySegment seg, long index, int x) {
        constants$325.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    /**
     * {@snippet :
 * int (*io_close2)(struct AVFormatContext*,struct AVIOContext*);
     * }
     */
    public interface io_close2 {

        int apply(java.lang.foreign.MemorySegment _x0, java.lang.foreign.MemorySegment _x1);
        static MemorySegment allocate(io_close2 fi, Arena scope) {
            return RuntimeHelper.upcallStub(constants$325.const$4, fi, constants$66.const$1, scope);
        }
        static io_close2 ofAddress(MemorySegment addr, Arena arena) {
            MemorySegment symbol = addr.reinterpret(arena, null);
            return (java.lang.foreign.MemorySegment __x0, java.lang.foreign.MemorySegment __x1) -> {
                try {
                    return (int)constants$112.const$3.invokeExact(symbol, __x0, __x1);
                } catch (Throwable ex$) {
                    throw new AssertionError("should not reach here", ex$);
                }
            };
        }
    }

    public static VarHandle io_close2$VH() {
        return constants$325.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int (*io_close2)(struct AVFormatContext*,struct AVIOContext*);
     * }
     */
    public static MemorySegment io_close2$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$325.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int (*io_close2)(struct AVFormatContext*,struct AVIOContext*);
     * }
     */
    public static void io_close2$set(MemorySegment seg, MemorySegment x) {
        constants$325.const$5.set(seg, x);
    }
    public static MemorySegment io_close2$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$325.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void io_close2$set(MemorySegment seg, long index, MemorySegment x) {
        constants$325.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static io_close2 io_close2(MemorySegment segment, Arena scope) {
        return io_close2.ofAddress(io_close2$get(segment), scope);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


