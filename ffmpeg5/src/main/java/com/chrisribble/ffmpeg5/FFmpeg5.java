// Generated by jextract

package com.chrisribble.ffmpeg5;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class FFmpeg5 extends FFmpeg5_3 {

    public static final OfByte C_CHAR = JAVA_BYTE;
    public static final OfShort C_SHORT = JAVA_SHORT;
    public static final OfInt C_INT = JAVA_INT;
    public static final OfLong C_LONG = JAVA_LONG;
    public static final OfLong C_LONG_LONG = JAVA_LONG;
    public static final OfFloat C_FLOAT = JAVA_FLOAT;
    public static final OfDouble C_DOUBLE = JAVA_DOUBLE;
    public static final AddressLayout C_POINTER = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * #define _STDINT_H 1
     * }
     */
    public static int _STDINT_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _FEATURES_H 1
     * }
     */
    public static int _FEATURES_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _DEFAULT_SOURCE 1
     * }
     */
    public static int _DEFAULT_SOURCE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __GLIBC_USE_ISOC2X 0
     * }
     */
    public static int __GLIBC_USE_ISOC2X() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __USE_ISOC11 1
     * }
     */
    public static int __USE_ISOC11() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __USE_ISOC99 1
     * }
     */
    public static int __USE_ISOC99() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __USE_ISOC95 1
     * }
     */
    public static int __USE_ISOC95() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __USE_POSIX_IMPLICITLY 1
     * }
     */
    public static int __USE_POSIX_IMPLICITLY() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_SOURCE 1
     * }
     */
    public static int _POSIX_SOURCE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __USE_POSIX 1
     * }
     */
    public static int __USE_POSIX() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __USE_POSIX2 1
     * }
     */
    public static int __USE_POSIX2() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __USE_POSIX199309 1
     * }
     */
    public static int __USE_POSIX199309() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __USE_POSIX199506 1
     * }
     */
    public static int __USE_POSIX199506() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __USE_XOPEN2K 1
     * }
     */
    public static int __USE_XOPEN2K() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __USE_XOPEN2K8 1
     * }
     */
    public static int __USE_XOPEN2K8() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _ATFILE_SOURCE 1
     * }
     */
    public static int _ATFILE_SOURCE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __WORDSIZE 64
     * }
     */
    public static int __WORDSIZE() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define __WORDSIZE_TIME64_COMPAT32 1
     * }
     */
    public static int __WORDSIZE_TIME64_COMPAT32() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __SYSCALL_WORDSIZE 64
     * }
     */
    public static int __SYSCALL_WORDSIZE() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define __USE_MISC 1
     * }
     */
    public static int __USE_MISC() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __USE_ATFILE 1
     * }
     */
    public static int __USE_ATFILE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __USE_FORTIFY_LEVEL 0
     * }
     */
    public static int __USE_FORTIFY_LEVEL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __GLIBC_USE_DEPRECATED_GETS 0
     * }
     */
    public static int __GLIBC_USE_DEPRECATED_GETS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __GLIBC_USE_DEPRECATED_SCANF 0
     * }
     */
    public static int __GLIBC_USE_DEPRECATED_SCANF() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define _STDC_PREDEF_H 1
     * }
     */
    public static int _STDC_PREDEF_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __STDC_IEC_559__ 1
     * }
     */
    public static int __STDC_IEC_559__() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __STDC_IEC_559_COMPLEX__ 1
     * }
     */
    public static int __STDC_IEC_559_COMPLEX__() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __GNU_LIBRARY__ 6
     * }
     */
    public static int __GNU_LIBRARY__() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define __GLIBC__ 2
     * }
     */
    public static int __GLIBC__() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define __GLIBC_MINOR__ 37
     * }
     */
    public static int __GLIBC_MINOR__() {
        return (int)37L;
    }
    /**
     * {@snippet :
     * #define _SYS_CDEFS_H 1
     * }
     */
    public static int _SYS_CDEFS_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __glibc_c99_flexarr_available 1
     * }
     */
    public static int __glibc_c99_flexarr_available() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI 0
     * }
     */
    public static int __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __HAVE_GENERIC_SELECTION 1
     * }
     */
    public static int __HAVE_GENERIC_SELECTION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __GLIBC_USE_LIB_EXT2 0
     * }
     */
    public static int __GLIBC_USE_LIB_EXT2() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __GLIBC_USE_IEC_60559_BFP_EXT 0
     * }
     */
    public static int __GLIBC_USE_IEC_60559_BFP_EXT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __GLIBC_USE_IEC_60559_BFP_EXT_C2X 0
     * }
     */
    public static int __GLIBC_USE_IEC_60559_BFP_EXT_C2X() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __GLIBC_USE_IEC_60559_EXT 0
     * }
     */
    public static int __GLIBC_USE_IEC_60559_EXT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __GLIBC_USE_IEC_60559_FUNCS_EXT 0
     * }
     */
    public static int __GLIBC_USE_IEC_60559_FUNCS_EXT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X 0
     * }
     */
    public static int __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __GLIBC_USE_IEC_60559_TYPES_EXT 0
     * }
     */
    public static int __GLIBC_USE_IEC_60559_TYPES_EXT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define _BITS_TYPES_H 1
     * }
     */
    public static int _BITS_TYPES_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _BITS_TYPESIZES_H 1
     * }
     */
    public static int _BITS_TYPESIZES_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __OFF_T_MATCHES_OFF64_T 1
     * }
     */
    public static int __OFF_T_MATCHES_OFF64_T() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __INO_T_MATCHES_INO64_T 1
     * }
     */
    public static int __INO_T_MATCHES_INO64_T() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __RLIM_T_MATCHES_RLIM64_T 1
     * }
     */
    public static int __RLIM_T_MATCHES_RLIM64_T() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __STATFS_MATCHES_STATFS64 1
     * }
     */
    public static int __STATFS_MATCHES_STATFS64() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64 1
     * }
     */
    public static int __KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __FD_SETSIZE 1024
     * }
     */
    public static int __FD_SETSIZE() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * #define _BITS_TIME64_H 1
     * }
     */
    public static int _BITS_TIME64_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _BITS_WCHAR_H 1
     * }
     */
    public static int _BITS_WCHAR_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _BITS_STDINT_INTN_H 1
     * }
     */
    public static int _BITS_STDINT_INTN_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _BITS_STDINT_UINTN_H 1
     * }
     */
    public static int _BITS_STDINT_UINTN_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FF_LAMBDA_SHIFT 7
     * }
     */
    public static int FF_LAMBDA_SHIFT() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define FF_QP2LAMBDA 118
     * }
     */
    public static int FF_QP2LAMBDA() {
        return (int)118L;
    }
    /**
     * {@snippet :
     * #define AV_TIME_BASE 1000000
     * }
     */
    public static int AV_TIME_BASE() {
        return (int)1000000L;
    }
    /**
     * {@snippet :
     * #define _ERRNO_H 1
     * }
     */
    public static int _ERRNO_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _BITS_ERRNO_H 1
     * }
     */
    public static int _BITS_ERRNO_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define EPERM 1
     * }
     */
    public static int EPERM() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define ENOENT 2
     * }
     */
    public static int ENOENT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define ESRCH 3
     * }
     */
    public static int ESRCH() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define EINTR 4
     * }
     */
    public static int EINTR() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define EIO 5
     * }
     */
    public static int EIO() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define ENXIO 6
     * }
     */
    public static int ENXIO() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define E2BIG 7
     * }
     */
    public static int E2BIG() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define ENOEXEC 8
     * }
     */
    public static int ENOEXEC() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define EBADF 9
     * }
     */
    public static int EBADF() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define ECHILD 10
     * }
     */
    public static int ECHILD() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * #define EAGAIN 11
     * }
     */
    public static int EAGAIN() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * #define ENOMEM 12
     * }
     */
    public static int ENOMEM() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * #define EACCES 13
     * }
     */
    public static int EACCES() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * #define EFAULT 14
     * }
     */
    public static int EFAULT() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * #define ENOTBLK 15
     * }
     */
    public static int ENOTBLK() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * #define EBUSY 16
     * }
     */
    public static int EBUSY() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define EEXIST 17
     * }
     */
    public static int EEXIST() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * #define EXDEV 18
     * }
     */
    public static int EXDEV() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * #define ENODEV 19
     * }
     */
    public static int ENODEV() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * #define ENOTDIR 20
     * }
     */
    public static int ENOTDIR() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * #define EISDIR 21
     * }
     */
    public static int EISDIR() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * #define EINVAL 22
     * }
     */
    public static int EINVAL() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * #define ENFILE 23
     * }
     */
    public static int ENFILE() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * #define EMFILE 24
     * }
     */
    public static int EMFILE() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * #define ENOTTY 25
     * }
     */
    public static int ENOTTY() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * #define ETXTBSY 26
     * }
     */
    public static int ETXTBSY() {
        return (int)26L;
    }
    /**
     * {@snippet :
     * #define EFBIG 27
     * }
     */
    public static int EFBIG() {
        return (int)27L;
    }
    /**
     * {@snippet :
     * #define ENOSPC 28
     * }
     */
    public static int ENOSPC() {
        return (int)28L;
    }
    /**
     * {@snippet :
     * #define ESPIPE 29
     * }
     */
    public static int ESPIPE() {
        return (int)29L;
    }
    /**
     * {@snippet :
     * #define EROFS 30
     * }
     */
    public static int EROFS() {
        return (int)30L;
    }
    /**
     * {@snippet :
     * #define EMLINK 31
     * }
     */
    public static int EMLINK() {
        return (int)31L;
    }
    /**
     * {@snippet :
     * #define EPIPE 32
     * }
     */
    public static int EPIPE() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define EDOM 33
     * }
     */
    public static int EDOM() {
        return (int)33L;
    }
    /**
     * {@snippet :
     * #define ERANGE 34
     * }
     */
    public static int ERANGE() {
        return (int)34L;
    }
    /**
     * {@snippet :
     * #define EDEADLK 35
     * }
     */
    public static int EDEADLK() {
        return (int)35L;
    }
    /**
     * {@snippet :
     * #define ENAMETOOLONG 36
     * }
     */
    public static int ENAMETOOLONG() {
        return (int)36L;
    }
    /**
     * {@snippet :
     * #define ENOLCK 37
     * }
     */
    public static int ENOLCK() {
        return (int)37L;
    }
    /**
     * {@snippet :
     * #define ENOSYS 38
     * }
     */
    public static int ENOSYS() {
        return (int)38L;
    }
    /**
     * {@snippet :
     * #define ENOTEMPTY 39
     * }
     */
    public static int ENOTEMPTY() {
        return (int)39L;
    }
    /**
     * {@snippet :
     * #define ELOOP 40
     * }
     */
    public static int ELOOP() {
        return (int)40L;
    }
    /**
     * {@snippet :
     * #define ENOMSG 42
     * }
     */
    public static int ENOMSG() {
        return (int)42L;
    }
    /**
     * {@snippet :
     * #define EIDRM 43
     * }
     */
    public static int EIDRM() {
        return (int)43L;
    }
    /**
     * {@snippet :
     * #define ECHRNG 44
     * }
     */
    public static int ECHRNG() {
        return (int)44L;
    }
    /**
     * {@snippet :
     * #define EL2NSYNC 45
     * }
     */
    public static int EL2NSYNC() {
        return (int)45L;
    }
    /**
     * {@snippet :
     * #define EL3HLT 46
     * }
     */
    public static int EL3HLT() {
        return (int)46L;
    }
    /**
     * {@snippet :
     * #define EL3RST 47
     * }
     */
    public static int EL3RST() {
        return (int)47L;
    }
    /**
     * {@snippet :
     * #define ELNRNG 48
     * }
     */
    public static int ELNRNG() {
        return (int)48L;
    }
    /**
     * {@snippet :
     * #define EUNATCH 49
     * }
     */
    public static int EUNATCH() {
        return (int)49L;
    }
    /**
     * {@snippet :
     * #define ENOCSI 50
     * }
     */
    public static int ENOCSI() {
        return (int)50L;
    }
    /**
     * {@snippet :
     * #define EL2HLT 51
     * }
     */
    public static int EL2HLT() {
        return (int)51L;
    }
    /**
     * {@snippet :
     * #define EBADE 52
     * }
     */
    public static int EBADE() {
        return (int)52L;
    }
    /**
     * {@snippet :
     * #define EBADR 53
     * }
     */
    public static int EBADR() {
        return (int)53L;
    }
    /**
     * {@snippet :
     * #define EXFULL 54
     * }
     */
    public static int EXFULL() {
        return (int)54L;
    }
    /**
     * {@snippet :
     * #define ENOANO 55
     * }
     */
    public static int ENOANO() {
        return (int)55L;
    }
    /**
     * {@snippet :
     * #define EBADRQC 56
     * }
     */
    public static int EBADRQC() {
        return (int)56L;
    }
    /**
     * {@snippet :
     * #define EBADSLT 57
     * }
     */
    public static int EBADSLT() {
        return (int)57L;
    }
    /**
     * {@snippet :
     * #define EBFONT 59
     * }
     */
    public static int EBFONT() {
        return (int)59L;
    }
    /**
     * {@snippet :
     * #define ENOSTR 60
     * }
     */
    public static int ENOSTR() {
        return (int)60L;
    }
    /**
     * {@snippet :
     * #define ENODATA 61
     * }
     */
    public static int ENODATA() {
        return (int)61L;
    }
    /**
     * {@snippet :
     * #define ETIME 62
     * }
     */
    public static int ETIME() {
        return (int)62L;
    }
    /**
     * {@snippet :
     * #define ENOSR 63
     * }
     */
    public static int ENOSR() {
        return (int)63L;
    }
    /**
     * {@snippet :
     * #define ENONET 64
     * }
     */
    public static int ENONET() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define ENOPKG 65
     * }
     */
    public static int ENOPKG() {
        return (int)65L;
    }
    /**
     * {@snippet :
     * #define EREMOTE 66
     * }
     */
    public static int EREMOTE() {
        return (int)66L;
    }
    /**
     * {@snippet :
     * #define ENOLINK 67
     * }
     */
    public static int ENOLINK() {
        return (int)67L;
    }
    /**
     * {@snippet :
     * #define EADV 68
     * }
     */
    public static int EADV() {
        return (int)68L;
    }
    /**
     * {@snippet :
     * #define ESRMNT 69
     * }
     */
    public static int ESRMNT() {
        return (int)69L;
    }
    /**
     * {@snippet :
     * #define ECOMM 70
     * }
     */
    public static int ECOMM() {
        return (int)70L;
    }
    /**
     * {@snippet :
     * #define EPROTO 71
     * }
     */
    public static int EPROTO() {
        return (int)71L;
    }
    /**
     * {@snippet :
     * #define EMULTIHOP 72
     * }
     */
    public static int EMULTIHOP() {
        return (int)72L;
    }
    /**
     * {@snippet :
     * #define EDOTDOT 73
     * }
     */
    public static int EDOTDOT() {
        return (int)73L;
    }
    /**
     * {@snippet :
     * #define EBADMSG 74
     * }
     */
    public static int EBADMSG() {
        return (int)74L;
    }
    /**
     * {@snippet :
     * #define EOVERFLOW 75
     * }
     */
    public static int EOVERFLOW() {
        return (int)75L;
    }
    /**
     * {@snippet :
     * #define ENOTUNIQ 76
     * }
     */
    public static int ENOTUNIQ() {
        return (int)76L;
    }
    /**
     * {@snippet :
     * #define EBADFD 77
     * }
     */
    public static int EBADFD() {
        return (int)77L;
    }
    /**
     * {@snippet :
     * #define EREMCHG 78
     * }
     */
    public static int EREMCHG() {
        return (int)78L;
    }
    /**
     * {@snippet :
     * #define ELIBACC 79
     * }
     */
    public static int ELIBACC() {
        return (int)79L;
    }
    /**
     * {@snippet :
     * #define ELIBBAD 80
     * }
     */
    public static int ELIBBAD() {
        return (int)80L;
    }
    /**
     * {@snippet :
     * #define ELIBSCN 81
     * }
     */
    public static int ELIBSCN() {
        return (int)81L;
    }
    /**
     * {@snippet :
     * #define ELIBMAX 82
     * }
     */
    public static int ELIBMAX() {
        return (int)82L;
    }
    /**
     * {@snippet :
     * #define ELIBEXEC 83
     * }
     */
    public static int ELIBEXEC() {
        return (int)83L;
    }
    /**
     * {@snippet :
     * #define EILSEQ 84
     * }
     */
    public static int EILSEQ() {
        return (int)84L;
    }
    /**
     * {@snippet :
     * #define ERESTART 85
     * }
     */
    public static int ERESTART() {
        return (int)85L;
    }
    /**
     * {@snippet :
     * #define ESTRPIPE 86
     * }
     */
    public static int ESTRPIPE() {
        return (int)86L;
    }
    /**
     * {@snippet :
     * #define EUSERS 87
     * }
     */
    public static int EUSERS() {
        return (int)87L;
    }
    /**
     * {@snippet :
     * #define ENOTSOCK 88
     * }
     */
    public static int ENOTSOCK() {
        return (int)88L;
    }
    /**
     * {@snippet :
     * #define EDESTADDRREQ 89
     * }
     */
    public static int EDESTADDRREQ() {
        return (int)89L;
    }
    /**
     * {@snippet :
     * #define EMSGSIZE 90
     * }
     */
    public static int EMSGSIZE() {
        return (int)90L;
    }
    /**
     * {@snippet :
     * #define EPROTOTYPE 91
     * }
     */
    public static int EPROTOTYPE() {
        return (int)91L;
    }
    /**
     * {@snippet :
     * #define ENOPROTOOPT 92
     * }
     */
    public static int ENOPROTOOPT() {
        return (int)92L;
    }
    /**
     * {@snippet :
     * #define EPROTONOSUPPORT 93
     * }
     */
    public static int EPROTONOSUPPORT() {
        return (int)93L;
    }
    /**
     * {@snippet :
     * #define ESOCKTNOSUPPORT 94
     * }
     */
    public static int ESOCKTNOSUPPORT() {
        return (int)94L;
    }
    /**
     * {@snippet :
     * #define EOPNOTSUPP 95
     * }
     */
    public static int EOPNOTSUPP() {
        return (int)95L;
    }
    /**
     * {@snippet :
     * #define EPFNOSUPPORT 96
     * }
     */
    public static int EPFNOSUPPORT() {
        return (int)96L;
    }
    /**
     * {@snippet :
     * #define EAFNOSUPPORT 97
     * }
     */
    public static int EAFNOSUPPORT() {
        return (int)97L;
    }
    /**
     * {@snippet :
     * #define EADDRINUSE 98
     * }
     */
    public static int EADDRINUSE() {
        return (int)98L;
    }
    /**
     * {@snippet :
     * #define EADDRNOTAVAIL 99
     * }
     */
    public static int EADDRNOTAVAIL() {
        return (int)99L;
    }
    /**
     * {@snippet :
     * #define ENETDOWN 100
     * }
     */
    public static int ENETDOWN() {
        return (int)100L;
    }
    /**
     * {@snippet :
     * #define ENETUNREACH 101
     * }
     */
    public static int ENETUNREACH() {
        return (int)101L;
    }
    /**
     * {@snippet :
     * #define ENETRESET 102
     * }
     */
    public static int ENETRESET() {
        return (int)102L;
    }
    /**
     * {@snippet :
     * #define ECONNABORTED 103
     * }
     */
    public static int ECONNABORTED() {
        return (int)103L;
    }
    /**
     * {@snippet :
     * #define ECONNRESET 104
     * }
     */
    public static int ECONNRESET() {
        return (int)104L;
    }
    /**
     * {@snippet :
     * #define ENOBUFS 105
     * }
     */
    public static int ENOBUFS() {
        return (int)105L;
    }
    /**
     * {@snippet :
     * #define EISCONN 106
     * }
     */
    public static int EISCONN() {
        return (int)106L;
    }
    /**
     * {@snippet :
     * #define ENOTCONN 107
     * }
     */
    public static int ENOTCONN() {
        return (int)107L;
    }
    /**
     * {@snippet :
     * #define ESHUTDOWN 108
     * }
     */
    public static int ESHUTDOWN() {
        return (int)108L;
    }
    /**
     * {@snippet :
     * #define ETOOMANYREFS 109
     * }
     */
    public static int ETOOMANYREFS() {
        return (int)109L;
    }
    /**
     * {@snippet :
     * #define ETIMEDOUT 110
     * }
     */
    public static int ETIMEDOUT() {
        return (int)110L;
    }
    /**
     * {@snippet :
     * #define ECONNREFUSED 111
     * }
     */
    public static int ECONNREFUSED() {
        return (int)111L;
    }
    /**
     * {@snippet :
     * #define EHOSTDOWN 112
     * }
     */
    public static int EHOSTDOWN() {
        return (int)112L;
    }
    /**
     * {@snippet :
     * #define EHOSTUNREACH 113
     * }
     */
    public static int EHOSTUNREACH() {
        return (int)113L;
    }
    /**
     * {@snippet :
     * #define EALREADY 114
     * }
     */
    public static int EALREADY() {
        return (int)114L;
    }
    /**
     * {@snippet :
     * #define EINPROGRESS 115
     * }
     */
    public static int EINPROGRESS() {
        return (int)115L;
    }
    /**
     * {@snippet :
     * #define ESTALE 116
     * }
     */
    public static int ESTALE() {
        return (int)116L;
    }
    /**
     * {@snippet :
     * #define EUCLEAN 117
     * }
     */
    public static int EUCLEAN() {
        return (int)117L;
    }
    /**
     * {@snippet :
     * #define ENOTNAM 118
     * }
     */
    public static int ENOTNAM() {
        return (int)118L;
    }
    /**
     * {@snippet :
     * #define ENAVAIL 119
     * }
     */
    public static int ENAVAIL() {
        return (int)119L;
    }
    /**
     * {@snippet :
     * #define EISNAM 120
     * }
     */
    public static int EISNAM() {
        return (int)120L;
    }
    /**
     * {@snippet :
     * #define EREMOTEIO 121
     * }
     */
    public static int EREMOTEIO() {
        return (int)121L;
    }
    /**
     * {@snippet :
     * #define EDQUOT 122
     * }
     */
    public static int EDQUOT() {
        return (int)122L;
    }
    /**
     * {@snippet :
     * #define ENOMEDIUM 123
     * }
     */
    public static int ENOMEDIUM() {
        return (int)123L;
    }
    /**
     * {@snippet :
     * #define EMEDIUMTYPE 124
     * }
     */
    public static int EMEDIUMTYPE() {
        return (int)124L;
    }
    /**
     * {@snippet :
     * #define ECANCELED 125
     * }
     */
    public static int ECANCELED() {
        return (int)125L;
    }
    /**
     * {@snippet :
     * #define ENOKEY 126
     * }
     */
    public static int ENOKEY() {
        return (int)126L;
    }
    /**
     * {@snippet :
     * #define EKEYEXPIRED 127
     * }
     */
    public static int EKEYEXPIRED() {
        return (int)127L;
    }
    /**
     * {@snippet :
     * #define EKEYREVOKED 128
     * }
     */
    public static int EKEYREVOKED() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define EKEYREJECTED 129
     * }
     */
    public static int EKEYREJECTED() {
        return (int)129L;
    }
    /**
     * {@snippet :
     * #define EOWNERDEAD 130
     * }
     */
    public static int EOWNERDEAD() {
        return (int)130L;
    }
    /**
     * {@snippet :
     * #define ENOTRECOVERABLE 131
     * }
     */
    public static int ENOTRECOVERABLE() {
        return (int)131L;
    }
    /**
     * {@snippet :
     * #define ERFKILL 132
     * }
     */
    public static int ERFKILL() {
        return (int)132L;
    }
    /**
     * {@snippet :
     * #define EHWPOISON 133
     * }
     */
    public static int EHWPOISON() {
        return (int)133L;
    }
    /**
     * {@snippet :
     * #define _INTTYPES_H 1
     * }
     */
    public static int _INTTYPES_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define ____gwchar_t_defined 1
     * }
     */
    public static int ____gwchar_t_defined() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _LIBC_LIMITS_H_ 1
     * }
     */
    public static int _LIBC_LIMITS_H_() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define MB_LEN_MAX 16
     * }
     */
    public static int MB_LEN_MAX() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define _BITS_POSIX1_LIM_H 1
     * }
     */
    public static int _BITS_POSIX1_LIM_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_AIO_LISTIO_MAX 2
     * }
     */
    public static int _POSIX_AIO_LISTIO_MAX() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define _POSIX_AIO_MAX 1
     * }
     */
    public static int _POSIX_AIO_MAX() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_ARG_MAX 4096
     * }
     */
    public static int _POSIX_ARG_MAX() {
        return (int)4096L;
    }
    /**
     * {@snippet :
     * #define _POSIX_CHILD_MAX 25
     * }
     */
    public static int _POSIX_CHILD_MAX() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * #define _POSIX_DELAYTIMER_MAX 32
     * }
     */
    public static int _POSIX_DELAYTIMER_MAX() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define _POSIX_HOST_NAME_MAX 255
     * }
     */
    public static int _POSIX_HOST_NAME_MAX() {
        return (int)255L;
    }
    /**
     * {@snippet :
     * #define _POSIX_LINK_MAX 8
     * }
     */
    public static int _POSIX_LINK_MAX() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define _POSIX_LOGIN_NAME_MAX 9
     * }
     */
    public static int _POSIX_LOGIN_NAME_MAX() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define _POSIX_MAX_CANON 255
     * }
     */
    public static int _POSIX_MAX_CANON() {
        return (int)255L;
    }
    /**
     * {@snippet :
     * #define _POSIX_MAX_INPUT 255
     * }
     */
    public static int _POSIX_MAX_INPUT() {
        return (int)255L;
    }
    /**
     * {@snippet :
     * #define _POSIX_MQ_OPEN_MAX 8
     * }
     */
    public static int _POSIX_MQ_OPEN_MAX() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define _POSIX_MQ_PRIO_MAX 32
     * }
     */
    public static int _POSIX_MQ_PRIO_MAX() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define _POSIX_NAME_MAX 14
     * }
     */
    public static int _POSIX_NAME_MAX() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * #define _POSIX_NGROUPS_MAX 8
     * }
     */
    public static int _POSIX_NGROUPS_MAX() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define _POSIX_OPEN_MAX 20
     * }
     */
    public static int _POSIX_OPEN_MAX() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * #define _POSIX_PATH_MAX 256
     * }
     */
    public static int _POSIX_PATH_MAX() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define _POSIX_PIPE_BUF 512
     * }
     */
    public static int _POSIX_PIPE_BUF() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * #define _POSIX_RE_DUP_MAX 255
     * }
     */
    public static int _POSIX_RE_DUP_MAX() {
        return (int)255L;
    }
    /**
     * {@snippet :
     * #define _POSIX_RTSIG_MAX 8
     * }
     */
    public static int _POSIX_RTSIG_MAX() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define _POSIX_SEM_NSEMS_MAX 256
     * }
     */
    public static int _POSIX_SEM_NSEMS_MAX() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define _POSIX_SEM_VALUE_MAX 32767
     * }
     */
    public static int _POSIX_SEM_VALUE_MAX() {
        return (int)32767L;
    }
    /**
     * {@snippet :
     * #define _POSIX_SIGQUEUE_MAX 32
     * }
     */
    public static int _POSIX_SIGQUEUE_MAX() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define _POSIX_SSIZE_MAX 32767
     * }
     */
    public static int _POSIX_SSIZE_MAX() {
        return (int)32767L;
    }
    /**
     * {@snippet :
     * #define _POSIX_STREAM_MAX 8
     * }
     */
    public static int _POSIX_STREAM_MAX() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define _POSIX_SYMLINK_MAX 255
     * }
     */
    public static int _POSIX_SYMLINK_MAX() {
        return (int)255L;
    }
    /**
     * {@snippet :
     * #define _POSIX_SYMLOOP_MAX 8
     * }
     */
    public static int _POSIX_SYMLOOP_MAX() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define _POSIX_TIMER_MAX 32
     * }
     */
    public static int _POSIX_TIMER_MAX() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define _POSIX_TTY_NAME_MAX 9
     * }
     */
    public static int _POSIX_TTY_NAME_MAX() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define _POSIX_TZNAME_MAX 6
     * }
     */
    public static int _POSIX_TZNAME_MAX() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define _POSIX_CLOCKRES_MIN 20000000
     * }
     */
    public static int _POSIX_CLOCKRES_MIN() {
        return (int)20000000L;
    }
    /**
     * {@snippet :
     * #define NR_OPEN 1024
     * }
     */
    public static int NR_OPEN() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * #define NGROUPS_MAX 65536
     * }
     */
    public static int NGROUPS_MAX() {
        return (int)65536L;
    }
    /**
     * {@snippet :
     * #define ARG_MAX 131072
     * }
     */
    public static int ARG_MAX() {
        return (int)131072L;
    }
    /**
     * {@snippet :
     * #define LINK_MAX 127
     * }
     */
    public static int LINK_MAX() {
        return (int)127L;
    }
    /**
     * {@snippet :
     * #define MAX_CANON 255
     * }
     */
    public static int MAX_CANON() {
        return (int)255L;
    }
    /**
     * {@snippet :
     * #define MAX_INPUT 255
     * }
     */
    public static int MAX_INPUT() {
        return (int)255L;
    }
    /**
     * {@snippet :
     * #define NAME_MAX 255
     * }
     */
    public static int NAME_MAX() {
        return (int)255L;
    }
    /**
     * {@snippet :
     * #define PATH_MAX 4096
     * }
     */
    public static int PATH_MAX() {
        return (int)4096L;
    }
    /**
     * {@snippet :
     * #define PIPE_BUF 4096
     * }
     */
    public static int PIPE_BUF() {
        return (int)4096L;
    }
    /**
     * {@snippet :
     * #define XATTR_NAME_MAX 255
     * }
     */
    public static int XATTR_NAME_MAX() {
        return (int)255L;
    }
    /**
     * {@snippet :
     * #define XATTR_SIZE_MAX 65536
     * }
     */
    public static int XATTR_SIZE_MAX() {
        return (int)65536L;
    }
    /**
     * {@snippet :
     * #define XATTR_LIST_MAX 65536
     * }
     */
    public static int XATTR_LIST_MAX() {
        return (int)65536L;
    }
    /**
     * {@snippet :
     * #define RTSIG_MAX 32
     * }
     */
    public static int RTSIG_MAX() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define _POSIX_THREAD_KEYS_MAX 128
     * }
     */
    public static int _POSIX_THREAD_KEYS_MAX() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define PTHREAD_KEYS_MAX 1024
     * }
     */
    public static int PTHREAD_KEYS_MAX() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * #define _POSIX_THREAD_DESTRUCTOR_ITERATIONS 4
     * }
     */
    public static int _POSIX_THREAD_DESTRUCTOR_ITERATIONS() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define _POSIX_THREAD_THREADS_MAX 64
     * }
     */
    public static int _POSIX_THREAD_THREADS_MAX() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define AIO_PRIO_DELTA_MAX 20
     * }
     */
    public static int AIO_PRIO_DELTA_MAX() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * #define PTHREAD_STACK_MIN 16384
     * }
     */
    public static int PTHREAD_STACK_MIN() {
        return (int)16384L;
    }
    /**
     * {@snippet :
     * #define DELAYTIMER_MAX 2147483647
     * }
     */
    public static int DELAYTIMER_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define TTY_NAME_MAX 32
     * }
     */
    public static int TTY_NAME_MAX() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define LOGIN_NAME_MAX 256
     * }
     */
    public static int LOGIN_NAME_MAX() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define HOST_NAME_MAX 64
     * }
     */
    public static int HOST_NAME_MAX() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define MQ_PRIO_MAX 32768
     * }
     */
    public static int MQ_PRIO_MAX() {
        return (int)32768L;
    }
    /**
     * {@snippet :
     * #define _BITS_POSIX2_LIM_H 1
     * }
     */
    public static int _BITS_POSIX2_LIM_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _POSIX2_BC_BASE_MAX 99
     * }
     */
    public static int _POSIX2_BC_BASE_MAX() {
        return (int)99L;
    }
    /**
     * {@snippet :
     * #define _POSIX2_BC_DIM_MAX 2048
     * }
     */
    public static int _POSIX2_BC_DIM_MAX() {
        return (int)2048L;
    }
    /**
     * {@snippet :
     * #define _POSIX2_BC_SCALE_MAX 99
     * }
     */
    public static int _POSIX2_BC_SCALE_MAX() {
        return (int)99L;
    }
    /**
     * {@snippet :
     * #define _POSIX2_BC_STRING_MAX 1000
     * }
     */
    public static int _POSIX2_BC_STRING_MAX() {
        return (int)1000L;
    }
    /**
     * {@snippet :
     * #define _POSIX2_COLL_WEIGHTS_MAX 2
     * }
     */
    public static int _POSIX2_COLL_WEIGHTS_MAX() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define _POSIX2_EXPR_NEST_MAX 32
     * }
     */
    public static int _POSIX2_EXPR_NEST_MAX() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define _POSIX2_LINE_MAX 2048
     * }
     */
    public static int _POSIX2_LINE_MAX() {
        return (int)2048L;
    }
    /**
     * {@snippet :
     * #define _POSIX2_RE_DUP_MAX 255
     * }
     */
    public static int _POSIX2_RE_DUP_MAX() {
        return (int)255L;
    }
    /**
     * {@snippet :
     * #define _POSIX2_CHARCLASS_NAME_MAX 14
     * }
     */
    public static int _POSIX2_CHARCLASS_NAME_MAX() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * #define COLL_WEIGHTS_MAX 255
     * }
     */
    public static int COLL_WEIGHTS_MAX() {
        return (int)255L;
    }
    /**
     * {@snippet :
     * #define CHARCLASS_NAME_MAX 2048
     * }
     */
    public static int CHARCLASS_NAME_MAX() {
        return (int)2048L;
    }
    /**
     * {@snippet :
     * #define _MATH_H 1
     * }
     */
    public static int _MATH_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _BITS_LIBM_SIMD_DECL_STUBS_H 1
     * }
     */
    public static int _BITS_LIBM_SIMD_DECL_STUBS_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __HAVE_FLOAT128 0
     * }
     */
    public static int __HAVE_FLOAT128() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __HAVE_DISTINCT_FLOAT128 0
     * }
     */
    public static int __HAVE_DISTINCT_FLOAT128() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __HAVE_FLOAT64X 1
     * }
     */
    public static int __HAVE_FLOAT64X() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __HAVE_FLOAT64X_LONG_DOUBLE 1
     * }
     */
    public static int __HAVE_FLOAT64X_LONG_DOUBLE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __HAVE_FLOAT16 0
     * }
     */
    public static int __HAVE_FLOAT16() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __HAVE_FLOAT32 1
     * }
     */
    public static int __HAVE_FLOAT32() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __HAVE_FLOAT64 1
     * }
     */
    public static int __HAVE_FLOAT64() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __HAVE_FLOAT32X 1
     * }
     */
    public static int __HAVE_FLOAT32X() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __HAVE_FLOAT128X 0
     * }
     */
    public static int __HAVE_FLOAT128X() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __HAVE_DISTINCT_FLOAT32 0
     * }
     */
    public static int __HAVE_DISTINCT_FLOAT32() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __HAVE_DISTINCT_FLOAT64 0
     * }
     */
    public static int __HAVE_DISTINCT_FLOAT64() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __HAVE_DISTINCT_FLOAT32X 0
     * }
     */
    public static int __HAVE_DISTINCT_FLOAT32X() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __HAVE_DISTINCT_FLOAT64X 0
     * }
     */
    public static int __HAVE_DISTINCT_FLOAT64X() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __HAVE_FLOATN_NOT_TYPEDEF 0
     * }
     */
    public static int __HAVE_FLOATN_NOT_TYPEDEF() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __FP_LOGB0_IS_MIN 1
     * }
     */
    public static int __FP_LOGB0_IS_MIN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __FP_LOGBNAN_IS_MIN 1
     * }
     */
    public static int __FP_LOGBNAN_IS_MIN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __MATH_DECLARING_DOUBLE 1
     * }
     */
    public static int __MATH_DECLARING_DOUBLE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __MATH_DECLARING_FLOATN 0
     * }
     */
    public static int __MATH_DECLARING_FLOATN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __MATH_DECLARE_LDOUBLE 1
     * }
     */
    public static int __MATH_DECLARE_LDOUBLE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FP_NAN 0
     * }
     */
    public static int FP_NAN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define FP_INFINITE 1
     * }
     */
    public static int FP_INFINITE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FP_ZERO 2
     * }
     */
    public static int FP_ZERO() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define FP_SUBNORMAL 3
     * }
     */
    public static int FP_SUBNORMAL() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define FP_NORMAL 4
     * }
     */
    public static int FP_NORMAL() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define MATH_ERRNO 1
     * }
     */
    public static int MATH_ERRNO() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define MATH_ERREXCEPT 2
     * }
     */
    public static int MATH_ERREXCEPT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define _STDIO_H 1
     * }
     */
    public static int _STDIO_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __GNUC_VA_LIST 1
     * }
     */
    public static int __GNUC_VA_LIST() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _____fpos_t_defined 1
     * }
     */
    public static int _____fpos_t_defined() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define ____mbstate_t_defined 1
     * }
     */
    public static int ____mbstate_t_defined() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _____fpos64_t_defined 1
     * }
     */
    public static int _____fpos64_t_defined() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define ____FILE_defined 1
     * }
     */
    public static int ____FILE_defined() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __FILE_defined 1
     * }
     */
    public static int __FILE_defined() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __struct_FILE_defined 1
     * }
     */
    public static int __struct_FILE_defined() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _IO_EOF_SEEN 16
     * }
     */
    public static int _IO_EOF_SEEN() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define _IO_ERR_SEEN 32
     * }
     */
    public static int _IO_ERR_SEEN() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define _IO_USER_LOCK 32768
     * }
     */
    public static int _IO_USER_LOCK() {
        return (int)32768L;
    }
    /**
     * {@snippet :
     * #define _IOFBF 0
     * }
     */
    public static int _IOFBF() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define _IOLBF 1
     * }
     */
    public static int _IOLBF() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _IONBF 2
     * }
     */
    public static int _IONBF() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define BUFSIZ 8192
     * }
     */
    public static int BUFSIZ() {
        return (int)8192L;
    }
    /**
     * {@snippet :
     * #define SEEK_SET 0
     * }
     */
    public static int SEEK_SET() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define SEEK_CUR 1
     * }
     */
    public static int SEEK_CUR() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define SEEK_END 2
     * }
     */
    public static int SEEK_END() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define _BITS_STDIO_LIM_H 1
     * }
     */
    public static int _BITS_STDIO_LIM_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define L_tmpnam 20
     * }
     */
    public static int L_tmpnam() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * #define TMP_MAX 238328
     * }
     */
    public static int TMP_MAX() {
        return (int)238328L;
    }
    /**
     * {@snippet :
     * #define FILENAME_MAX 4096
     * }
     */
    public static int FILENAME_MAX() {
        return (int)4096L;
    }
    /**
     * {@snippet :
     * #define L_ctermid 9
     * }
     */
    public static int L_ctermid() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define FOPEN_MAX 16
     * }
     */
    public static int FOPEN_MAX() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define _STDLIB_H 1
     * }
     */
    public static int _STDLIB_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define WNOHANG 1
     * }
     */
    public static int WNOHANG() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define WUNTRACED 2
     * }
     */
    public static int WUNTRACED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define WSTOPPED 2
     * }
     */
    public static int WSTOPPED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define WEXITED 4
     * }
     */
    public static int WEXITED() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define WCONTINUED 8
     * }
     */
    public static int WCONTINUED() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define WNOWAIT 16777216
     * }
     */
    public static int WNOWAIT() {
        return (int)16777216L;
    }
    /**
     * {@snippet :
     * #define __WNOTHREAD 536870912
     * }
     */
    public static int __WNOTHREAD() {
        return (int)536870912L;
    }
    /**
     * {@snippet :
     * #define __WALL 1073741824
     * }
     */
    public static int __WALL() {
        return (int)1073741824L;
    }
    /**
     * {@snippet :
     * #define __W_CONTINUED 65535
     * }
     */
    public static int __W_CONTINUED() {
        return (int)65535L;
    }
    /**
     * {@snippet :
     * #define __WCOREFLAG 128
     * }
     */
    public static int __WCOREFLAG() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define __ldiv_t_defined 1
     * }
     */
    public static int __ldiv_t_defined() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __lldiv_t_defined 1
     * }
     */
    public static int __lldiv_t_defined() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define RAND_MAX 2147483647
     * }
     */
    public static int RAND_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define EXIT_FAILURE 1
     * }
     */
    public static int EXIT_FAILURE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define EXIT_SUCCESS 0
     * }
     */
    public static int EXIT_SUCCESS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define _SYS_TYPES_H 1
     * }
     */
    public static int _SYS_TYPES_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __clock_t_defined 1
     * }
     */
    public static int __clock_t_defined() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __clockid_t_defined 1
     * }
     */
    public static int __clockid_t_defined() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __time_t_defined 1
     * }
     */
    public static int __time_t_defined() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __timer_t_defined 1
     * }
     */
    public static int __timer_t_defined() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __BIT_TYPES_DEFINED__ 1
     * }
     */
    public static int __BIT_TYPES_DEFINED__() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _ENDIAN_H 1
     * }
     */
    public static int _ENDIAN_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _BITS_ENDIAN_H 1
     * }
     */
    public static int _BITS_ENDIAN_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __LITTLE_ENDIAN 1234
     * }
     */
    public static int __LITTLE_ENDIAN() {
        return (int)1234L;
    }
    /**
     * {@snippet :
     * #define __BIG_ENDIAN 4321
     * }
     */
    public static int __BIG_ENDIAN() {
        return (int)4321L;
    }
    /**
     * {@snippet :
     * #define __PDP_ENDIAN 3412
     * }
     */
    public static int __PDP_ENDIAN() {
        return (int)3412L;
    }
    /**
     * {@snippet :
     * #define _BITS_ENDIANNESS_H 1
     * }
     */
    public static int _BITS_ENDIANNESS_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _BITS_BYTESWAP_H 1
     * }
     */
    public static int _BITS_BYTESWAP_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _BITS_UINTN_IDENTITY_H 1
     * }
     */
    public static int _BITS_UINTN_IDENTITY_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _SYS_SELECT_H 1
     * }
     */
    public static int _SYS_SELECT_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __sigset_t_defined 1
     * }
     */
    public static int __sigset_t_defined() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __timeval_defined 1
     * }
     */
    public static int __timeval_defined() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _STRUCT_TIMESPEC 1
     * }
     */
    public static int _STRUCT_TIMESPEC() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _BITS_PTHREADTYPES_COMMON_H 1
     * }
     */
    public static int _BITS_PTHREADTYPES_COMMON_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _THREAD_SHARED_TYPES_H 1
     * }
     */
    public static int _THREAD_SHARED_TYPES_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _BITS_PTHREADTYPES_ARCH_H 1
     * }
     */
    public static int _BITS_PTHREADTYPES_ARCH_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __SIZEOF_PTHREAD_MUTEX_T 40
     * }
     */
    public static int __SIZEOF_PTHREAD_MUTEX_T() {
        return (int)40L;
    }
    /**
     * {@snippet :
     * #define __SIZEOF_PTHREAD_ATTR_T 56
     * }
     */
    public static int __SIZEOF_PTHREAD_ATTR_T() {
        return (int)56L;
    }
    /**
     * {@snippet :
     * #define __SIZEOF_PTHREAD_RWLOCK_T 56
     * }
     */
    public static int __SIZEOF_PTHREAD_RWLOCK_T() {
        return (int)56L;
    }
    /**
     * {@snippet :
     * #define __SIZEOF_PTHREAD_BARRIER_T 32
     * }
     */
    public static int __SIZEOF_PTHREAD_BARRIER_T() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define __SIZEOF_PTHREAD_MUTEXATTR_T 4
     * }
     */
    public static int __SIZEOF_PTHREAD_MUTEXATTR_T() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define __SIZEOF_PTHREAD_COND_T 48
     * }
     */
    public static int __SIZEOF_PTHREAD_COND_T() {
        return (int)48L;
    }
    /**
     * {@snippet :
     * #define __SIZEOF_PTHREAD_CONDATTR_T 4
     * }
     */
    public static int __SIZEOF_PTHREAD_CONDATTR_T() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define __SIZEOF_PTHREAD_RWLOCKATTR_T 8
     * }
     */
    public static int __SIZEOF_PTHREAD_RWLOCKATTR_T() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define __SIZEOF_PTHREAD_BARRIERATTR_T 4
     * }
     */
    public static int __SIZEOF_PTHREAD_BARRIERATTR_T() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define _THREAD_MUTEX_INTERNAL_H 1
     * }
     */
    public static int _THREAD_MUTEX_INTERNAL_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __PTHREAD_MUTEX_HAVE_PREV 1
     * }
     */
    public static int __PTHREAD_MUTEX_HAVE_PREV() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __have_pthread_attr_t 1
     * }
     */
    public static int __have_pthread_attr_t() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _ALLOCA_H 1
     * }
     */
    public static int _ALLOCA_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _STRING_H 1
     * }
     */
    public static int _STRING_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _BITS_TYPES_LOCALE_T_H 1
     * }
     */
    public static int _BITS_TYPES_LOCALE_T_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _BITS_TYPES___LOCALE_T_H 1
     * }
     */
    public static int _BITS_TYPES___LOCALE_T_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _STRINGS_H 1
     * }
     */
    public static int _STRINGS_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define AV_HAVE_BIGENDIAN 0
     * }
     */
    public static int AV_HAVE_BIGENDIAN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define AV_HAVE_FAST_UNALIGNED 1
     * }
     */
    public static int AV_HAVE_FAST_UNALIGNED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define LIBAVUTIL_VERSION_MAJOR 57
     * }
     */
    public static int LIBAVUTIL_VERSION_MAJOR() {
        return (int)57L;
    }
    /**
     * {@snippet :
     * #define LIBAVUTIL_VERSION_MINOR 28
     * }
     */
    public static int LIBAVUTIL_VERSION_MINOR() {
        return (int)28L;
    }
    /**
     * {@snippet :
     * #define LIBAVUTIL_VERSION_MICRO 100
     * }
     */
    public static int LIBAVUTIL_VERSION_MICRO() {
        return (int)100L;
    }
    /**
     * {@snippet :
     * #define AV_ERROR_MAX_STRING_SIZE 64
     * }
     */
    public static int AV_ERROR_MAX_STRING_SIZE() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define AV_LOG_PANIC 0
     * }
     */
    public static int AV_LOG_PANIC() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define AV_LOG_FATAL 8
     * }
     */
    public static int AV_LOG_FATAL() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define AV_LOG_ERROR 16
     * }
     */
    public static int AV_LOG_ERROR() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define AV_LOG_WARNING 24
     * }
     */
    public static int AV_LOG_WARNING() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * #define AV_LOG_INFO 32
     * }
     */
    public static int AV_LOG_INFO() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define AV_LOG_VERBOSE 40
     * }
     */
    public static int AV_LOG_VERBOSE() {
        return (int)40L;
    }
    /**
     * {@snippet :
     * #define AV_LOG_DEBUG 48
     * }
     */
    public static int AV_LOG_DEBUG() {
        return (int)48L;
    }
    /**
     * {@snippet :
     * #define AV_LOG_TRACE 56
     * }
     */
    public static int AV_LOG_TRACE() {
        return (int)56L;
    }
    /**
     * {@snippet :
     * #define AV_LOG_SKIP_REPEATED 1
     * }
     */
    public static int AV_LOG_SKIP_REPEATED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define AV_LOG_PRINT_LEVEL 2
     * }
     */
    public static int AV_LOG_PRINT_LEVEL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define AVPALETTE_SIZE 1024
     * }
     */
    public static int AVPALETTE_SIZE() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * #define AVPALETTE_COUNT 256
     * }
     */
    public static int AVPALETTE_COUNT() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define AV_FOURCC_MAX_STRING_SIZE 32
     * }
     */
    public static int AV_FOURCC_MAX_STRING_SIZE() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define AV_DICT_MATCH_CASE 1
     * }
     */
    public static int AV_DICT_MATCH_CASE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define AV_DICT_IGNORE_SUFFIX 2
     * }
     */
    public static int AV_DICT_IGNORE_SUFFIX() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define AV_DICT_DONT_STRDUP_KEY 4
     * }
     */
    public static int AV_DICT_DONT_STRDUP_KEY() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define AV_DICT_DONT_STRDUP_VAL 8
     * }
     */
    public static int AV_DICT_DONT_STRDUP_VAL() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define AV_DICT_DONT_OVERWRITE 16
     * }
     */
    public static int AV_DICT_DONT_OVERWRITE() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define AV_DICT_APPEND 32
     * }
     */
    public static int AV_DICT_APPEND() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define AV_DICT_MULTIKEY 64
     * }
     */
    public static int AV_DICT_MULTIKEY() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define AV_NUM_DATA_POINTERS 8
     * }
     */
    public static int AV_NUM_DATA_POINTERS() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define FF_DECODE_ERROR_INVALID_BITSTREAM 1
     * }
     */
    public static int FF_DECODE_ERROR_INVALID_BITSTREAM() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FF_DECODE_ERROR_MISSING_REFERENCE 2
     * }
     */
    public static int FF_DECODE_ERROR_MISSING_REFERENCE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define FF_DECODE_ERROR_CONCEALMENT_ACTIVE 4
     * }
     */
    public static int FF_DECODE_ERROR_CONCEALMENT_ACTIVE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define FF_DECODE_ERROR_DECODE_SLICES 8
     * }
     */
    public static int FF_DECODE_ERROR_DECODE_SLICES() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define LIBAVCODEC_VERSION_MAJOR 59
     * }
     */
    public static int LIBAVCODEC_VERSION_MAJOR() {
        return (int)59L;
    }
    /**
     * {@snippet :
     * #define AV_CODEC_CAP_INTRA_ONLY 1073741824
     * }
     */
    public static int AV_CODEC_CAP_INTRA_ONLY() {
        return (int)1073741824L;
    }
    /**
     * {@snippet :
     * #define AV_INPUT_BUFFER_PADDING_SIZE 64
     * }
     */
    public static int AV_INPUT_BUFFER_PADDING_SIZE() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define AV_PKT_FLAG_KEY 1
     * }
     */
    public static int AV_PKT_FLAG_KEY() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define AV_PKT_FLAG_CORRUPT 2
     * }
     */
    public static int AV_PKT_FLAG_CORRUPT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define AV_PKT_FLAG_DISCARD 4
     * }
     */
    public static int AV_PKT_FLAG_DISCARD() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define AV_PKT_FLAG_TRUSTED 8
     * }
     */
    public static int AV_PKT_FLAG_TRUSTED() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define AV_PKT_FLAG_DISPOSABLE 16
     * }
     */
    public static int AV_PKT_FLAG_DISPOSABLE() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define LIBAVCODEC_VERSION_MINOR 37
     * }
     */
    public static int LIBAVCODEC_VERSION_MINOR() {
        return (int)37L;
    }
    /**
     * {@snippet :
     * #define LIBAVCODEC_VERSION_MICRO 100
     * }
     */
    public static int LIBAVCODEC_VERSION_MICRO() {
        return (int)100L;
    }
    /**
     * {@snippet :
     * #define AV_INPUT_BUFFER_MIN_SIZE 16384
     * }
     */
    public static int AV_INPUT_BUFFER_MIN_SIZE() {
        return (int)16384L;
    }
    /**
     * {@snippet :
     * #define FF_CMP_SAD 0
     * }
     */
    public static int FF_CMP_SAD() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define FF_CMP_SSE 1
     * }
     */
    public static int FF_CMP_SSE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FF_CMP_SATD 2
     * }
     */
    public static int FF_CMP_SATD() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define FF_CMP_DCT 3
     * }
     */
    public static int FF_CMP_DCT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define FF_CMP_PSNR 4
     * }
     */
    public static int FF_CMP_PSNR() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define FF_CMP_BIT 5
     * }
     */
    public static int FF_CMP_BIT() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define FF_CMP_RD 6
     * }
     */
    public static int FF_CMP_RD() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define FF_CMP_ZERO 7
     * }
     */
    public static int FF_CMP_ZERO() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define FF_CMP_VSAD 8
     * }
     */
    public static int FF_CMP_VSAD() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define FF_CMP_VSSE 9
     * }
     */
    public static int FF_CMP_VSSE() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define FF_CMP_NSSE 10
     * }
     */
    public static int FF_CMP_NSSE() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * #define FF_CMP_W53 11
     * }
     */
    public static int FF_CMP_W53() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * #define FF_CMP_W97 12
     * }
     */
    public static int FF_CMP_W97() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * #define FF_CMP_DCTMAX 13
     * }
     */
    public static int FF_CMP_DCTMAX() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * #define FF_CMP_DCT264 14
     * }
     */
    public static int FF_CMP_DCT264() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * #define FF_CMP_MEDIAN_SAD 15
     * }
     */
    public static int FF_CMP_MEDIAN_SAD() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * #define FF_CMP_CHROMA 256
     * }
     */
    public static int FF_CMP_CHROMA() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define SLICE_FLAG_CODED_ORDER 1
     * }
     */
    public static int SLICE_FLAG_CODED_ORDER() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define SLICE_FLAG_ALLOW_FIELD 2
     * }
     */
    public static int SLICE_FLAG_ALLOW_FIELD() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define SLICE_FLAG_ALLOW_PLANE 4
     * }
     */
    public static int SLICE_FLAG_ALLOW_PLANE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define FF_MB_DECISION_SIMPLE 0
     * }
     */
    public static int FF_MB_DECISION_SIMPLE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define FF_MB_DECISION_BITS 1
     * }
     */
    public static int FF_MB_DECISION_BITS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FF_MB_DECISION_RD 2
     * }
     */
    public static int FF_MB_DECISION_RD() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define FF_BUG_AUTODETECT 1
     * }
     */
    public static int FF_BUG_AUTODETECT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FF_BUG_XVID_ILACE 4
     * }
     */
    public static int FF_BUG_XVID_ILACE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define FF_BUG_UMP4 8
     * }
     */
    public static int FF_BUG_UMP4() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define FF_BUG_NO_PADDING 16
     * }
     */
    public static int FF_BUG_NO_PADDING() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define FF_BUG_AMV 32
     * }
     */
    public static int FF_BUG_AMV() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define FF_BUG_QPEL_CHROMA 64
     * }
     */
    public static int FF_BUG_QPEL_CHROMA() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define FF_BUG_STD_QPEL 128
     * }
     */
    public static int FF_BUG_STD_QPEL() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define FF_BUG_QPEL_CHROMA2 256
     * }
     */
    public static int FF_BUG_QPEL_CHROMA2() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define FF_BUG_DIRECT_BLOCKSIZE 512
     * }
     */
    public static int FF_BUG_DIRECT_BLOCKSIZE() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * #define FF_BUG_EDGE 1024
     * }
     */
    public static int FF_BUG_EDGE() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * #define FF_BUG_HPEL_CHROMA 2048
     * }
     */
    public static int FF_BUG_HPEL_CHROMA() {
        return (int)2048L;
    }
    /**
     * {@snippet :
     * #define FF_BUG_DC_CLIP 4096
     * }
     */
    public static int FF_BUG_DC_CLIP() {
        return (int)4096L;
    }
    /**
     * {@snippet :
     * #define FF_BUG_MS 8192
     * }
     */
    public static int FF_BUG_MS() {
        return (int)8192L;
    }
    /**
     * {@snippet :
     * #define FF_BUG_TRUNCATED 16384
     * }
     */
    public static int FF_BUG_TRUNCATED() {
        return (int)16384L;
    }
    /**
     * {@snippet :
     * #define FF_BUG_IEDGE 32768
     * }
     */
    public static int FF_BUG_IEDGE() {
        return (int)32768L;
    }
    /**
     * {@snippet :
     * #define FF_COMPLIANCE_VERY_STRICT 2
     * }
     */
    public static int FF_COMPLIANCE_VERY_STRICT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define FF_COMPLIANCE_STRICT 1
     * }
     */
    public static int FF_COMPLIANCE_STRICT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FF_COMPLIANCE_NORMAL 0
     * }
     */
    public static int FF_COMPLIANCE_NORMAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define FF_EC_GUESS_MVS 1
     * }
     */
    public static int FF_EC_GUESS_MVS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FF_EC_DEBLOCK 2
     * }
     */
    public static int FF_EC_DEBLOCK() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define FF_EC_FAVOR_INTER 256
     * }
     */
    public static int FF_EC_FAVOR_INTER() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define FF_DEBUG_PICT_INFO 1
     * }
     */
    public static int FF_DEBUG_PICT_INFO() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FF_DEBUG_RC 2
     * }
     */
    public static int FF_DEBUG_RC() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define FF_DEBUG_BITSTREAM 4
     * }
     */
    public static int FF_DEBUG_BITSTREAM() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define FF_DEBUG_MB_TYPE 8
     * }
     */
    public static int FF_DEBUG_MB_TYPE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define FF_DEBUG_QP 16
     * }
     */
    public static int FF_DEBUG_QP() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define FF_DEBUG_DCT_COEFF 64
     * }
     */
    public static int FF_DEBUG_DCT_COEFF() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define FF_DEBUG_SKIP 128
     * }
     */
    public static int FF_DEBUG_SKIP() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define FF_DEBUG_STARTCODE 256
     * }
     */
    public static int FF_DEBUG_STARTCODE() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define FF_DEBUG_ER 1024
     * }
     */
    public static int FF_DEBUG_ER() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * #define FF_DEBUG_MMCO 2048
     * }
     */
    public static int FF_DEBUG_MMCO() {
        return (int)2048L;
    }
    /**
     * {@snippet :
     * #define FF_DEBUG_BUGS 4096
     * }
     */
    public static int FF_DEBUG_BUGS() {
        return (int)4096L;
    }
    /**
     * {@snippet :
     * #define FF_DEBUG_BUFFERS 32768
     * }
     */
    public static int FF_DEBUG_BUFFERS() {
        return (int)32768L;
    }
    /**
     * {@snippet :
     * #define FF_DEBUG_THREADS 65536
     * }
     */
    public static int FF_DEBUG_THREADS() {
        return (int)65536L;
    }
    /**
     * {@snippet :
     * #define FF_DEBUG_GREEN_MD 8388608
     * }
     */
    public static int FF_DEBUG_GREEN_MD() {
        return (int)8388608L;
    }
    /**
     * {@snippet :
     * #define FF_DEBUG_NOMC 16777216
     * }
     */
    public static int FF_DEBUG_NOMC() {
        return (int)16777216L;
    }
    /**
     * {@snippet :
     * #define FF_DCT_AUTO 0
     * }
     */
    public static int FF_DCT_AUTO() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define FF_DCT_FASTINT 1
     * }
     */
    public static int FF_DCT_FASTINT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FF_DCT_INT 2
     * }
     */
    public static int FF_DCT_INT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define FF_DCT_MMX 3
     * }
     */
    public static int FF_DCT_MMX() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define FF_DCT_ALTIVEC 5
     * }
     */
    public static int FF_DCT_ALTIVEC() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define FF_DCT_FAAN 6
     * }
     */
    public static int FF_DCT_FAAN() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define FF_IDCT_AUTO 0
     * }
     */
    public static int FF_IDCT_AUTO() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define FF_IDCT_INT 1
     * }
     */
    public static int FF_IDCT_INT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FF_IDCT_SIMPLE 2
     * }
     */
    public static int FF_IDCT_SIMPLE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define FF_IDCT_SIMPLEMMX 3
     * }
     */
    public static int FF_IDCT_SIMPLEMMX() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define FF_IDCT_ARM 7
     * }
     */
    public static int FF_IDCT_ARM() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define FF_IDCT_ALTIVEC 8
     * }
     */
    public static int FF_IDCT_ALTIVEC() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define FF_IDCT_SIMPLEARM 10
     * }
     */
    public static int FF_IDCT_SIMPLEARM() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * #define FF_IDCT_XVID 14
     * }
     */
    public static int FF_IDCT_XVID() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * #define FF_IDCT_SIMPLEARMV5TE 16
     * }
     */
    public static int FF_IDCT_SIMPLEARMV5TE() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define FF_IDCT_SIMPLEARMV6 17
     * }
     */
    public static int FF_IDCT_SIMPLEARMV6() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * #define FF_IDCT_FAAN 20
     * }
     */
    public static int FF_IDCT_FAAN() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * #define FF_IDCT_SIMPLENEON 22
     * }
     */
    public static int FF_IDCT_SIMPLENEON() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * #define FF_IDCT_NONE 24
     * }
     */
    public static int FF_IDCT_NONE() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * #define FF_IDCT_SIMPLEAUTO 128
     * }
     */
    public static int FF_IDCT_SIMPLEAUTO() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define FF_THREAD_FRAME 1
     * }
     */
    public static int FF_THREAD_FRAME() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FF_THREAD_SLICE 2
     * }
     */
    public static int FF_THREAD_SLICE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_AAC_MAIN 0
     * }
     */
    public static int FF_PROFILE_AAC_MAIN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_AAC_LOW 1
     * }
     */
    public static int FF_PROFILE_AAC_LOW() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_AAC_SSR 2
     * }
     */
    public static int FF_PROFILE_AAC_SSR() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_AAC_LTP 3
     * }
     */
    public static int FF_PROFILE_AAC_LTP() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_AAC_HE 4
     * }
     */
    public static int FF_PROFILE_AAC_HE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_AAC_HE_V2 28
     * }
     */
    public static int FF_PROFILE_AAC_HE_V2() {
        return (int)28L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_AAC_LD 22
     * }
     */
    public static int FF_PROFILE_AAC_LD() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_AAC_ELD 38
     * }
     */
    public static int FF_PROFILE_AAC_ELD() {
        return (int)38L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_MPEG2_AAC_LOW 128
     * }
     */
    public static int FF_PROFILE_MPEG2_AAC_LOW() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_MPEG2_AAC_HE 131
     * }
     */
    public static int FF_PROFILE_MPEG2_AAC_HE() {
        return (int)131L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_DNXHD 0
     * }
     */
    public static int FF_PROFILE_DNXHD() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_DNXHR_LB 1
     * }
     */
    public static int FF_PROFILE_DNXHR_LB() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_DNXHR_SQ 2
     * }
     */
    public static int FF_PROFILE_DNXHR_SQ() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_DNXHR_HQ 3
     * }
     */
    public static int FF_PROFILE_DNXHR_HQ() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_DNXHR_HQX 4
     * }
     */
    public static int FF_PROFILE_DNXHR_HQX() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_DNXHR_444 5
     * }
     */
    public static int FF_PROFILE_DNXHR_444() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_DTS 20
     * }
     */
    public static int FF_PROFILE_DTS() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_DTS_ES 30
     * }
     */
    public static int FF_PROFILE_DTS_ES() {
        return (int)30L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_DTS_96_24 40
     * }
     */
    public static int FF_PROFILE_DTS_96_24() {
        return (int)40L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_DTS_HD_HRA 50
     * }
     */
    public static int FF_PROFILE_DTS_HD_HRA() {
        return (int)50L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_DTS_HD_MA 60
     * }
     */
    public static int FF_PROFILE_DTS_HD_MA() {
        return (int)60L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_DTS_EXPRESS 70
     * }
     */
    public static int FF_PROFILE_DTS_EXPRESS() {
        return (int)70L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_MPEG2_422 0
     * }
     */
    public static int FF_PROFILE_MPEG2_422() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_MPEG2_HIGH 1
     * }
     */
    public static int FF_PROFILE_MPEG2_HIGH() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_MPEG2_SS 2
     * }
     */
    public static int FF_PROFILE_MPEG2_SS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_MPEG2_SNR_SCALABLE 3
     * }
     */
    public static int FF_PROFILE_MPEG2_SNR_SCALABLE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_MPEG2_MAIN 4
     * }
     */
    public static int FF_PROFILE_MPEG2_MAIN() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_MPEG2_SIMPLE 5
     * }
     */
    public static int FF_PROFILE_MPEG2_SIMPLE() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_H264_BASELINE 66
     * }
     */
    public static int FF_PROFILE_H264_BASELINE() {
        return (int)66L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_H264_MAIN 77
     * }
     */
    public static int FF_PROFILE_H264_MAIN() {
        return (int)77L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_H264_EXTENDED 88
     * }
     */
    public static int FF_PROFILE_H264_EXTENDED() {
        return (int)88L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_H264_HIGH 100
     * }
     */
    public static int FF_PROFILE_H264_HIGH() {
        return (int)100L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_H264_HIGH_10 110
     * }
     */
    public static int FF_PROFILE_H264_HIGH_10() {
        return (int)110L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_H264_MULTIVIEW_HIGH 118
     * }
     */
    public static int FF_PROFILE_H264_MULTIVIEW_HIGH() {
        return (int)118L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_H264_HIGH_422 122
     * }
     */
    public static int FF_PROFILE_H264_HIGH_422() {
        return (int)122L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_H264_STEREO_HIGH 128
     * }
     */
    public static int FF_PROFILE_H264_STEREO_HIGH() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_H264_HIGH_444 144
     * }
     */
    public static int FF_PROFILE_H264_HIGH_444() {
        return (int)144L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_H264_HIGH_444_PREDICTIVE 244
     * }
     */
    public static int FF_PROFILE_H264_HIGH_444_PREDICTIVE() {
        return (int)244L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_H264_CAVLC_444 44
     * }
     */
    public static int FF_PROFILE_H264_CAVLC_444() {
        return (int)44L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_VC1_SIMPLE 0
     * }
     */
    public static int FF_PROFILE_VC1_SIMPLE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_VC1_MAIN 1
     * }
     */
    public static int FF_PROFILE_VC1_MAIN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_VC1_COMPLEX 2
     * }
     */
    public static int FF_PROFILE_VC1_COMPLEX() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_VC1_ADVANCED 3
     * }
     */
    public static int FF_PROFILE_VC1_ADVANCED() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_MPEG4_SIMPLE 0
     * }
     */
    public static int FF_PROFILE_MPEG4_SIMPLE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_MPEG4_SIMPLE_SCALABLE 1
     * }
     */
    public static int FF_PROFILE_MPEG4_SIMPLE_SCALABLE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_MPEG4_CORE 2
     * }
     */
    public static int FF_PROFILE_MPEG4_CORE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_MPEG4_MAIN 3
     * }
     */
    public static int FF_PROFILE_MPEG4_MAIN() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_MPEG4_N_BIT 4
     * }
     */
    public static int FF_PROFILE_MPEG4_N_BIT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_MPEG4_SCALABLE_TEXTURE 5
     * }
     */
    public static int FF_PROFILE_MPEG4_SCALABLE_TEXTURE() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_MPEG4_SIMPLE_FACE_ANIMATION 6
     * }
     */
    public static int FF_PROFILE_MPEG4_SIMPLE_FACE_ANIMATION() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_MPEG4_BASIC_ANIMATED_TEXTURE 7
     * }
     */
    public static int FF_PROFILE_MPEG4_BASIC_ANIMATED_TEXTURE() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_MPEG4_HYBRID 8
     * }
     */
    public static int FF_PROFILE_MPEG4_HYBRID() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_MPEG4_ADVANCED_REAL_TIME 9
     * }
     */
    public static int FF_PROFILE_MPEG4_ADVANCED_REAL_TIME() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_MPEG4_CORE_SCALABLE 10
     * }
     */
    public static int FF_PROFILE_MPEG4_CORE_SCALABLE() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_MPEG4_ADVANCED_CODING 11
     * }
     */
    public static int FF_PROFILE_MPEG4_ADVANCED_CODING() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_MPEG4_ADVANCED_CORE 12
     * }
     */
    public static int FF_PROFILE_MPEG4_ADVANCED_CORE() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_MPEG4_ADVANCED_SCALABLE_TEXTURE 13
     * }
     */
    public static int FF_PROFILE_MPEG4_ADVANCED_SCALABLE_TEXTURE() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_MPEG4_SIMPLE_STUDIO 14
     * }
     */
    public static int FF_PROFILE_MPEG4_SIMPLE_STUDIO() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_MPEG4_ADVANCED_SIMPLE 15
     * }
     */
    public static int FF_PROFILE_MPEG4_ADVANCED_SIMPLE() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_JPEG2000_CSTREAM_RESTRICTION_0 1
     * }
     */
    public static int FF_PROFILE_JPEG2000_CSTREAM_RESTRICTION_0() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_JPEG2000_CSTREAM_RESTRICTION_1 2
     * }
     */
    public static int FF_PROFILE_JPEG2000_CSTREAM_RESTRICTION_1() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_JPEG2000_CSTREAM_NO_RESTRICTION 32768
     * }
     */
    public static int FF_PROFILE_JPEG2000_CSTREAM_NO_RESTRICTION() {
        return (int)32768L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_JPEG2000_DCINEMA_2K 3
     * }
     */
    public static int FF_PROFILE_JPEG2000_DCINEMA_2K() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_JPEG2000_DCINEMA_4K 4
     * }
     */
    public static int FF_PROFILE_JPEG2000_DCINEMA_4K() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_VP9_0 0
     * }
     */
    public static int FF_PROFILE_VP9_0() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_VP9_1 1
     * }
     */
    public static int FF_PROFILE_VP9_1() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_VP9_2 2
     * }
     */
    public static int FF_PROFILE_VP9_2() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_VP9_3 3
     * }
     */
    public static int FF_PROFILE_VP9_3() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_HEVC_MAIN 1
     * }
     */
    public static int FF_PROFILE_HEVC_MAIN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_HEVC_MAIN_10 2
     * }
     */
    public static int FF_PROFILE_HEVC_MAIN_10() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_HEVC_MAIN_STILL_PICTURE 3
     * }
     */
    public static int FF_PROFILE_HEVC_MAIN_STILL_PICTURE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_HEVC_REXT 4
     * }
     */
    public static int FF_PROFILE_HEVC_REXT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_VVC_MAIN_10 1
     * }
     */
    public static int FF_PROFILE_VVC_MAIN_10() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_VVC_MAIN_10_444 33
     * }
     */
    public static int FF_PROFILE_VVC_MAIN_10_444() {
        return (int)33L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_AV1_MAIN 0
     * }
     */
    public static int FF_PROFILE_AV1_MAIN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_AV1_HIGH 1
     * }
     */
    public static int FF_PROFILE_AV1_HIGH() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_AV1_PROFESSIONAL 2
     * }
     */
    public static int FF_PROFILE_AV1_PROFESSIONAL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_MJPEG_HUFFMAN_BASELINE_DCT 192
     * }
     */
    public static int FF_PROFILE_MJPEG_HUFFMAN_BASELINE_DCT() {
        return (int)192L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_MJPEG_HUFFMAN_EXTENDED_SEQUENTIAL_DCT 193
     * }
     */
    public static int FF_PROFILE_MJPEG_HUFFMAN_EXTENDED_SEQUENTIAL_DCT() {
        return (int)193L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_MJPEG_HUFFMAN_PROGRESSIVE_DCT 194
     * }
     */
    public static int FF_PROFILE_MJPEG_HUFFMAN_PROGRESSIVE_DCT() {
        return (int)194L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_MJPEG_HUFFMAN_LOSSLESS 195
     * }
     */
    public static int FF_PROFILE_MJPEG_HUFFMAN_LOSSLESS() {
        return (int)195L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_MJPEG_JPEG_LS 247
     * }
     */
    public static int FF_PROFILE_MJPEG_JPEG_LS() {
        return (int)247L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_SBC_MSBC 1
     * }
     */
    public static int FF_PROFILE_SBC_MSBC() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_PRORES_PROXY 0
     * }
     */
    public static int FF_PROFILE_PRORES_PROXY() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_PRORES_LT 1
     * }
     */
    public static int FF_PROFILE_PRORES_LT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_PRORES_STANDARD 2
     * }
     */
    public static int FF_PROFILE_PRORES_STANDARD() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_PRORES_HQ 3
     * }
     */
    public static int FF_PROFILE_PRORES_HQ() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_PRORES_4444 4
     * }
     */
    public static int FF_PROFILE_PRORES_4444() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_PRORES_XQ 5
     * }
     */
    public static int FF_PROFILE_PRORES_XQ() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_ARIB_PROFILE_A 0
     * }
     */
    public static int FF_PROFILE_ARIB_PROFILE_A() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_ARIB_PROFILE_C 1
     * }
     */
    public static int FF_PROFILE_ARIB_PROFILE_C() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_KLVA_SYNC 0
     * }
     */
    public static int FF_PROFILE_KLVA_SYNC() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define FF_PROFILE_KLVA_ASYNC 1
     * }
     */
    public static int FF_PROFILE_KLVA_ASYNC() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FF_SUB_CHARENC_MODE_AUTOMATIC 0
     * }
     */
    public static int FF_SUB_CHARENC_MODE_AUTOMATIC() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define FF_SUB_CHARENC_MODE_PRE_DECODER 1
     * }
     */
    public static int FF_SUB_CHARENC_MODE_PRE_DECODER() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FF_SUB_CHARENC_MODE_IGNORE 2
     * }
     */
    public static int FF_SUB_CHARENC_MODE_IGNORE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define FF_DEBUG_VIS_MV_P_FOR 1
     * }
     */
    public static int FF_DEBUG_VIS_MV_P_FOR() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FF_DEBUG_VIS_MV_B_FOR 2
     * }
     */
    public static int FF_DEBUG_VIS_MV_B_FOR() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define FF_DEBUG_VIS_MV_B_BACK 4
     * }
     */
    public static int FF_DEBUG_VIS_MV_B_BACK() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define FF_CODEC_PROPERTY_LOSSLESS 1
     * }
     */
    public static int FF_CODEC_PROPERTY_LOSSLESS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FF_CODEC_PROPERTY_CLOSED_CAPTIONS 2
     * }
     */
    public static int FF_CODEC_PROPERTY_CLOSED_CAPTIONS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define FF_CODEC_PROPERTY_FILM_GRAIN 4
     * }
     */
    public static int FF_CODEC_PROPERTY_FILM_GRAIN() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define FF_SUB_TEXT_FMT_ASS 0
     * }
     */
    public static int FF_SUB_TEXT_FMT_ASS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define AV_HWACCEL_CODEC_CAP_EXPERIMENTAL 512
     * }
     */
    public static int AV_HWACCEL_CODEC_CAP_EXPERIMENTAL() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * #define AV_SUBTITLE_FLAG_FORCED 1
     * }
     */
    public static int AV_SUBTITLE_FLAG_FORCED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define AV_PARSER_PTS_NB 4
     * }
     */
    public static int AV_PARSER_PTS_NB() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define PARSER_FLAG_COMPLETE_FRAMES 1
     * }
     */
    public static int PARSER_FLAG_COMPLETE_FRAMES() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define PARSER_FLAG_ONCE 2
     * }
     */
    public static int PARSER_FLAG_ONCE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define PARSER_FLAG_FETCHED_OFFSET 4
     * }
     */
    public static int PARSER_FLAG_FETCHED_OFFSET() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define PARSER_FLAG_USE_CODEC_TS 4096
     * }
     */
    public static int PARSER_FLAG_USE_CODEC_TS() {
        return (int)4096L;
    }
    /**
     * {@snippet :
     * #define _TIME_H 1
     * }
     */
    public static int _TIME_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _BITS_TIME_H 1
     * }
     */
    public static int _BITS_TIME_H() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define CLOCK_REALTIME 0
     * }
     */
    public static int CLOCK_REALTIME() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define CLOCK_MONOTONIC 1
     * }
     */
    public static int CLOCK_MONOTONIC() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define CLOCK_PROCESS_CPUTIME_ID 2
     * }
     */
    public static int CLOCK_PROCESS_CPUTIME_ID() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define CLOCK_THREAD_CPUTIME_ID 3
     * }
     */
    public static int CLOCK_THREAD_CPUTIME_ID() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define CLOCK_MONOTONIC_RAW 4
     * }
     */
    public static int CLOCK_MONOTONIC_RAW() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define CLOCK_REALTIME_COARSE 5
     * }
     */
    public static int CLOCK_REALTIME_COARSE() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define CLOCK_MONOTONIC_COARSE 6
     * }
     */
    public static int CLOCK_MONOTONIC_COARSE() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define CLOCK_BOOTTIME 7
     * }
     */
    public static int CLOCK_BOOTTIME() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define CLOCK_REALTIME_ALARM 8
     * }
     */
    public static int CLOCK_REALTIME_ALARM() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define CLOCK_BOOTTIME_ALARM 9
     * }
     */
    public static int CLOCK_BOOTTIME_ALARM() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define CLOCK_TAI 11
     * }
     */
    public static int CLOCK_TAI() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * #define TIMER_ABSTIME 1
     * }
     */
    public static int TIMER_ABSTIME() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __struct_tm_defined 1
     * }
     */
    public static int __struct_tm_defined() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __itimerspec_defined 1
     * }
     */
    public static int __itimerspec_defined() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define TIME_UTC 1
     * }
     */
    public static int TIME_UTC() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define LIBAVFORMAT_VERSION_MAJOR 59
     * }
     */
    public static int LIBAVFORMAT_VERSION_MAJOR() {
        return (int)59L;
    }
    /**
     * {@snippet :
     * #define FF_API_R_FRAME_RATE 1
     * }
     */
    public static int FF_API_R_FRAME_RATE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define AVSEEK_SIZE 65536
     * }
     */
    public static int AVSEEK_SIZE() {
        return (int)65536L;
    }
    /**
     * {@snippet :
     * #define AVSEEK_FORCE 131072
     * }
     */
    public static int AVSEEK_FORCE() {
        return (int)131072L;
    }
    /**
     * {@snippet :
     * #define AVIO_FLAG_READ 1
     * }
     */
    public static int AVIO_FLAG_READ() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define AVIO_FLAG_WRITE 2
     * }
     */
    public static int AVIO_FLAG_WRITE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define AVIO_FLAG_NONBLOCK 8
     * }
     */
    public static int AVIO_FLAG_NONBLOCK() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define AVIO_FLAG_DIRECT 32768
     * }
     */
    public static int AVIO_FLAG_DIRECT() {
        return (int)32768L;
    }
    /**
     * {@snippet :
     * #define LIBAVFORMAT_VERSION_MINOR 27
     * }
     */
    public static int LIBAVFORMAT_VERSION_MINOR() {
        return (int)27L;
    }
    /**
     * {@snippet :
     * #define LIBAVFORMAT_VERSION_MICRO 100
     * }
     */
    public static int LIBAVFORMAT_VERSION_MICRO() {
        return (int)100L;
    }
    /**
     * {@snippet :
     * #define AVPROBE_SCORE_EXTENSION 50
     * }
     */
    public static int AVPROBE_SCORE_EXTENSION() {
        return (int)50L;
    }
    /**
     * {@snippet :
     * #define AVPROBE_SCORE_MIME 75
     * }
     */
    public static int AVPROBE_SCORE_MIME() {
        return (int)75L;
    }
    /**
     * {@snippet :
     * #define AVPROBE_SCORE_MAX 100
     * }
     */
    public static int AVPROBE_SCORE_MAX() {
        return (int)100L;
    }
    /**
     * {@snippet :
     * #define AVPROBE_PADDING_SIZE 32
     * }
     */
    public static int AVPROBE_PADDING_SIZE() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define AVFMT_NOFILE 1
     * }
     */
    public static int AVFMT_NOFILE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define AVFMT_NEEDNUMBER 2
     * }
     */
    public static int AVFMT_NEEDNUMBER() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define AVFMT_EXPERIMENTAL 4
     * }
     */
    public static int AVFMT_EXPERIMENTAL() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define AVFMT_SHOW_IDS 8
     * }
     */
    public static int AVFMT_SHOW_IDS() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define AVFMT_GLOBALHEADER 64
     * }
     */
    public static int AVFMT_GLOBALHEADER() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define AVFMT_NOTIMESTAMPS 128
     * }
     */
    public static int AVFMT_NOTIMESTAMPS() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define AVFMT_GENERIC_INDEX 256
     * }
     */
    public static int AVFMT_GENERIC_INDEX() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define AVFMT_TS_DISCONT 512
     * }
     */
    public static int AVFMT_TS_DISCONT() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * #define AVFMT_VARIABLE_FPS 1024
     * }
     */
    public static int AVFMT_VARIABLE_FPS() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * #define AVFMT_NODIMENSIONS 2048
     * }
     */
    public static int AVFMT_NODIMENSIONS() {
        return (int)2048L;
    }
    /**
     * {@snippet :
     * #define AVFMT_NOSTREAMS 4096
     * }
     */
    public static int AVFMT_NOSTREAMS() {
        return (int)4096L;
    }
    /**
     * {@snippet :
     * #define AVFMT_NOBINSEARCH 8192
     * }
     */
    public static int AVFMT_NOBINSEARCH() {
        return (int)8192L;
    }
    /**
     * {@snippet :
     * #define AVFMT_NOGENSEARCH 16384
     * }
     */
    public static int AVFMT_NOGENSEARCH() {
        return (int)16384L;
    }
    /**
     * {@snippet :
     * #define AVFMT_NO_BYTE_SEEK 32768
     * }
     */
    public static int AVFMT_NO_BYTE_SEEK() {
        return (int)32768L;
    }
    /**
     * {@snippet :
     * #define AVFMT_ALLOW_FLUSH 65536
     * }
     */
    public static int AVFMT_ALLOW_FLUSH() {
        return (int)65536L;
    }
    /**
     * {@snippet :
     * #define AVFMT_TS_NONSTRICT 131072
     * }
     */
    public static int AVFMT_TS_NONSTRICT() {
        return (int)131072L;
    }
    /**
     * {@snippet :
     * #define AVFMT_TS_NEGATIVE 262144
     * }
     */
    public static int AVFMT_TS_NEGATIVE() {
        return (int)262144L;
    }
    /**
     * {@snippet :
     * #define AVFMT_SEEK_TO_PTS 67108864
     * }
     */
    public static int AVFMT_SEEK_TO_PTS() {
        return (int)67108864L;
    }
    /**
     * {@snippet :
     * #define AVINDEX_KEYFRAME 1
     * }
     */
    public static int AVINDEX_KEYFRAME() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define AVINDEX_DISCARD_FRAME 2
     * }
     */
    public static int AVINDEX_DISCARD_FRAME() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define AV_PTS_WRAP_IGNORE 0
     * }
     */
    public static int AV_PTS_WRAP_IGNORE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define AV_PTS_WRAP_ADD_OFFSET 1
     * }
     */
    public static int AV_PTS_WRAP_ADD_OFFSET() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define AVSTREAM_EVENT_FLAG_METADATA_UPDATED 1
     * }
     */
    public static int AVSTREAM_EVENT_FLAG_METADATA_UPDATED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define AV_PROGRAM_RUNNING 1
     * }
     */
    public static int AV_PROGRAM_RUNNING() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define AVFMTCTX_NOHEADER 1
     * }
     */
    public static int AVFMTCTX_NOHEADER() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define AVFMTCTX_UNSEEKABLE 2
     * }
     */
    public static int AVFMTCTX_UNSEEKABLE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define AVFMT_FLAG_GENPTS 1
     * }
     */
    public static int AVFMT_FLAG_GENPTS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define AVFMT_FLAG_IGNIDX 2
     * }
     */
    public static int AVFMT_FLAG_IGNIDX() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define AVFMT_FLAG_NONBLOCK 4
     * }
     */
    public static int AVFMT_FLAG_NONBLOCK() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define AVFMT_FLAG_IGNDTS 8
     * }
     */
    public static int AVFMT_FLAG_IGNDTS() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define AVFMT_FLAG_NOFILLIN 16
     * }
     */
    public static int AVFMT_FLAG_NOFILLIN() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define AVFMT_FLAG_NOPARSE 32
     * }
     */
    public static int AVFMT_FLAG_NOPARSE() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define AVFMT_FLAG_NOBUFFER 64
     * }
     */
    public static int AVFMT_FLAG_NOBUFFER() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define AVFMT_FLAG_CUSTOM_IO 128
     * }
     */
    public static int AVFMT_FLAG_CUSTOM_IO() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define AVFMT_FLAG_DISCARD_CORRUPT 256
     * }
     */
    public static int AVFMT_FLAG_DISCARD_CORRUPT() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define AVFMT_FLAG_FLUSH_PACKETS 512
     * }
     */
    public static int AVFMT_FLAG_FLUSH_PACKETS() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * #define AVFMT_FLAG_BITEXACT 1024
     * }
     */
    public static int AVFMT_FLAG_BITEXACT() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * #define AVFMT_FLAG_SORT_DTS 65536
     * }
     */
    public static int AVFMT_FLAG_SORT_DTS() {
        return (int)65536L;
    }
    /**
     * {@snippet :
     * #define AVFMT_FLAG_PRIV_OPT 131072
     * }
     */
    public static int AVFMT_FLAG_PRIV_OPT() {
        return (int)131072L;
    }
    /**
     * {@snippet :
     * #define AVFMT_FLAG_FAST_SEEK 524288
     * }
     */
    public static int AVFMT_FLAG_FAST_SEEK() {
        return (int)524288L;
    }
    /**
     * {@snippet :
     * #define AVFMT_FLAG_SHORTEST 1048576
     * }
     */
    public static int AVFMT_FLAG_SHORTEST() {
        return (int)1048576L;
    }
    /**
     * {@snippet :
     * #define AVFMT_FLAG_AUTO_BSF 2097152
     * }
     */
    public static int AVFMT_FLAG_AUTO_BSF() {
        return (int)2097152L;
    }
    /**
     * {@snippet :
     * #define FF_FDEBUG_TS 1
     * }
     */
    public static int FF_FDEBUG_TS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define AVFMT_EVENT_FLAG_METADATA_UPDATED 1
     * }
     */
    public static int AVFMT_EVENT_FLAG_METADATA_UPDATED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define AVFMT_AVOID_NEG_TS_DISABLED 0
     * }
     */
    public static int AVFMT_AVOID_NEG_TS_DISABLED() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define AVFMT_AVOID_NEG_TS_MAKE_NON_NEGATIVE 1
     * }
     */
    public static int AVFMT_AVOID_NEG_TS_MAKE_NON_NEGATIVE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define AVFMT_AVOID_NEG_TS_MAKE_ZERO 2
     * }
     */
    public static int AVFMT_AVOID_NEG_TS_MAKE_ZERO() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define AVSEEK_FLAG_BACKWARD 1
     * }
     */
    public static int AVSEEK_FLAG_BACKWARD() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define AVSEEK_FLAG_BYTE 2
     * }
     */
    public static int AVSEEK_FLAG_BYTE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define AVSEEK_FLAG_ANY 4
     * }
     */
    public static int AVSEEK_FLAG_ANY() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define AVSEEK_FLAG_FRAME 8
     * }
     */
    public static int AVSEEK_FLAG_FRAME() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define AVSTREAM_INIT_IN_WRITE_HEADER 0
     * }
     */
    public static int AVSTREAM_INIT_IN_WRITE_HEADER() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define AVSTREAM_INIT_IN_INIT_OUTPUT 1
     * }
     */
    public static int AVSTREAM_INIT_IN_INIT_OUTPUT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define AV_FRAME_FILENAME_FLAGS_MULTIPLE 1
     * }
     */
    public static int AV_FRAME_FILENAME_FLAGS_MULTIPLE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FF_LOSS_RESOLUTION 1
     * }
     */
    public static int FF_LOSS_RESOLUTION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FF_LOSS_DEPTH 2
     * }
     */
    public static int FF_LOSS_DEPTH() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define FF_LOSS_COLORSPACE 4
     * }
     */
    public static int FF_LOSS_COLORSPACE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define FF_LOSS_ALPHA 8
     * }
     */
    public static int FF_LOSS_ALPHA() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define FF_LOSS_COLORQUANT 16
     * }
     */
    public static int FF_LOSS_COLORQUANT() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define FF_LOSS_CHROMA 32
     * }
     */
    public static int FF_LOSS_CHROMA() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define LIBSWSCALE_VERSION_MAJOR 6
     * }
     */
    public static int LIBSWSCALE_VERSION_MAJOR() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define LIBSWSCALE_VERSION_MINOR 7
     * }
     */
    public static int LIBSWSCALE_VERSION_MINOR() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define LIBSWSCALE_VERSION_MICRO 100
     * }
     */
    public static int LIBSWSCALE_VERSION_MICRO() {
        return (int)100L;
    }
    /**
     * {@snippet :
     * #define SWS_FAST_BILINEAR 1
     * }
     */
    public static int SWS_FAST_BILINEAR() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define SWS_BILINEAR 2
     * }
     */
    public static int SWS_BILINEAR() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define SWS_BICUBIC 4
     * }
     */
    public static int SWS_BICUBIC() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define SWS_X 8
     * }
     */
    public static int SWS_X() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define SWS_POINT 16
     * }
     */
    public static int SWS_POINT() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define SWS_AREA 32
     * }
     */
    public static int SWS_AREA() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define SWS_BICUBLIN 64
     * }
     */
    public static int SWS_BICUBLIN() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define SWS_GAUSS 128
     * }
     */
    public static int SWS_GAUSS() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define SWS_SINC 256
     * }
     */
    public static int SWS_SINC() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define SWS_LANCZOS 512
     * }
     */
    public static int SWS_LANCZOS() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * #define SWS_SPLINE 1024
     * }
     */
    public static int SWS_SPLINE() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * #define SWS_SRC_V_CHR_DROP_MASK 196608
     * }
     */
    public static int SWS_SRC_V_CHR_DROP_MASK() {
        return (int)196608L;
    }
    /**
     * {@snippet :
     * #define SWS_SRC_V_CHR_DROP_SHIFT 16
     * }
     */
    public static int SWS_SRC_V_CHR_DROP_SHIFT() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define SWS_PARAM_DEFAULT 123456
     * }
     */
    public static int SWS_PARAM_DEFAULT() {
        return (int)123456L;
    }
    /**
     * {@snippet :
     * #define SWS_PRINT_INFO 4096
     * }
     */
    public static int SWS_PRINT_INFO() {
        return (int)4096L;
    }
    /**
     * {@snippet :
     * #define SWS_FULL_CHR_H_INT 8192
     * }
     */
    public static int SWS_FULL_CHR_H_INT() {
        return (int)8192L;
    }
    /**
     * {@snippet :
     * #define SWS_FULL_CHR_H_INP 16384
     * }
     */
    public static int SWS_FULL_CHR_H_INP() {
        return (int)16384L;
    }
    /**
     * {@snippet :
     * #define SWS_DIRECT_BGR 32768
     * }
     */
    public static int SWS_DIRECT_BGR() {
        return (int)32768L;
    }
    /**
     * {@snippet :
     * #define SWS_ACCURATE_RND 262144
     * }
     */
    public static int SWS_ACCURATE_RND() {
        return (int)262144L;
    }
    /**
     * {@snippet :
     * #define SWS_BITEXACT 524288
     * }
     */
    public static int SWS_BITEXACT() {
        return (int)524288L;
    }
    /**
     * {@snippet :
     * #define SWS_ERROR_DIFFUSION 8388608
     * }
     */
    public static int SWS_ERROR_DIFFUSION() {
        return (int)8388608L;
    }
    /**
     * {@snippet :
     * #define SWS_CS_ITU709 1
     * }
     */
    public static int SWS_CS_ITU709() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define SWS_CS_FCC 4
     * }
     */
    public static int SWS_CS_FCC() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define SWS_CS_ITU601 5
     * }
     */
    public static int SWS_CS_ITU601() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define SWS_CS_ITU624 5
     * }
     */
    public static int SWS_CS_ITU624() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define SWS_CS_SMPTE170M 5
     * }
     */
    public static int SWS_CS_SMPTE170M() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define SWS_CS_SMPTE240M 7
     * }
     */
    public static int SWS_CS_SMPTE240M() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define SWS_CS_DEFAULT 5
     * }
     */
    public static int SWS_CS_DEFAULT() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define SWS_CS_BT2020 9
     * }
     */
    public static int SWS_CS_BT2020() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * typedef unsigned char __u_char;
     * }
     */
    public static final OfByte __u_char = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef unsigned short __u_short;
     * }
     */
    public static final OfShort __u_short = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef unsigned int __u_int;
     * }
     */
    public static final OfInt __u_int = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned long __u_long;
     * }
     */
    public static final OfLong __u_long = JAVA_LONG;
    /**
     * {@snippet :
     * typedef signed char __int8_t;
     * }
     */
    public static final OfByte __int8_t = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef unsigned char __uint8_t;
     * }
     */
    public static final OfByte __uint8_t = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef short __int16_t;
     * }
     */
    public static final OfShort __int16_t = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef unsigned short __uint16_t;
     * }
     */
    public static final OfShort __uint16_t = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef int __int32_t;
     * }
     */
    public static final OfInt __int32_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned int __uint32_t;
     * }
     */
    public static final OfInt __uint32_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef long __int64_t;
     * }
     */
    public static final OfLong __int64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long __uint64_t;
     * }
     */
    public static final OfLong __uint64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef signed char __int_least8_t;
     * }
     */
    public static final OfByte __int_least8_t = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef unsigned char __uint_least8_t;
     * }
     */
    public static final OfByte __uint_least8_t = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef short __int_least16_t;
     * }
     */
    public static final OfShort __int_least16_t = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef unsigned short __uint_least16_t;
     * }
     */
    public static final OfShort __uint_least16_t = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef int __int_least32_t;
     * }
     */
    public static final OfInt __int_least32_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned int __uint_least32_t;
     * }
     */
    public static final OfInt __uint_least32_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef long __int_least64_t;
     * }
     */
    public static final OfLong __int_least64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long __uint_least64_t;
     * }
     */
    public static final OfLong __uint_least64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long __quad_t;
     * }
     */
    public static final OfLong __quad_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long __u_quad_t;
     * }
     */
    public static final OfLong __u_quad_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long __intmax_t;
     * }
     */
    public static final OfLong __intmax_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long __uintmax_t;
     * }
     */
    public static final OfLong __uintmax_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long __dev_t;
     * }
     */
    public static final OfLong __dev_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned int __uid_t;
     * }
     */
    public static final OfInt __uid_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned int __gid_t;
     * }
     */
    public static final OfInt __gid_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned long __ino_t;
     * }
     */
    public static final OfLong __ino_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long __ino64_t;
     * }
     */
    public static final OfLong __ino64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned int __mode_t;
     * }
     */
    public static final OfInt __mode_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned long __nlink_t;
     * }
     */
    public static final OfLong __nlink_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long __off_t;
     * }
     */
    public static final OfLong __off_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long __off64_t;
     * }
     */
    public static final OfLong __off64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef int __pid_t;
     * }
     */
    public static final OfInt __pid_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef long __clock_t;
     * }
     */
    public static final OfLong __clock_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long __rlim_t;
     * }
     */
    public static final OfLong __rlim_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long __rlim64_t;
     * }
     */
    public static final OfLong __rlim64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned int __id_t;
     * }
     */
    public static final OfInt __id_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef long __time_t;
     * }
     */
    public static final OfLong __time_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned int __useconds_t;
     * }
     */
    public static final OfInt __useconds_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef long __suseconds_t;
     * }
     */
    public static final OfLong __suseconds_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long __suseconds64_t;
     * }
     */
    public static final OfLong __suseconds64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef int __daddr_t;
     * }
     */
    public static final OfInt __daddr_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef int __key_t;
     * }
     */
    public static final OfInt __key_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef int __clockid_t;
     * }
     */
    public static final OfInt __clockid_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef void* __timer_t;
     * }
     */
    public static final AddressLayout __timer_t = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef long __blksize_t;
     * }
     */
    public static final OfLong __blksize_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long __blkcnt_t;
     * }
     */
    public static final OfLong __blkcnt_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long __blkcnt64_t;
     * }
     */
    public static final OfLong __blkcnt64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long __fsblkcnt_t;
     * }
     */
    public static final OfLong __fsblkcnt_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long __fsblkcnt64_t;
     * }
     */
    public static final OfLong __fsblkcnt64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long __fsfilcnt_t;
     * }
     */
    public static final OfLong __fsfilcnt_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long __fsfilcnt64_t;
     * }
     */
    public static final OfLong __fsfilcnt64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long __fsword_t;
     * }
     */
    public static final OfLong __fsword_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long __ssize_t;
     * }
     */
    public static final OfLong __ssize_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long __syscall_slong_t;
     * }
     */
    public static final OfLong __syscall_slong_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long __syscall_ulong_t;
     * }
     */
    public static final OfLong __syscall_ulong_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long __loff_t;
     * }
     */
    public static final OfLong __loff_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef char* __caddr_t;
     * }
     */
    public static final AddressLayout __caddr_t = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef long __intptr_t;
     * }
     */
    public static final OfLong __intptr_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned int __socklen_t;
     * }
     */
    public static final OfInt __socklen_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef int __sig_atomic_t;
     * }
     */
    public static final OfInt __sig_atomic_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef signed char int8_t;
     * }
     */
    public static final OfByte int8_t = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef short int16_t;
     * }
     */
    public static final OfShort int16_t = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef int int32_t;
     * }
     */
    public static final OfInt int32_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef long int64_t;
     * }
     */
    public static final OfLong int64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned char uint8_t;
     * }
     */
    public static final OfByte uint8_t = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef unsigned short uint16_t;
     * }
     */
    public static final OfShort uint16_t = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef unsigned int uint32_t;
     * }
     */
    public static final OfInt uint32_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned long uint64_t;
     * }
     */
    public static final OfLong uint64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef signed char int_least8_t;
     * }
     */
    public static final OfByte int_least8_t = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef short int_least16_t;
     * }
     */
    public static final OfShort int_least16_t = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef int int_least32_t;
     * }
     */
    public static final OfInt int_least32_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef long int_least64_t;
     * }
     */
    public static final OfLong int_least64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned char uint_least8_t;
     * }
     */
    public static final OfByte uint_least8_t = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef unsigned short uint_least16_t;
     * }
     */
    public static final OfShort uint_least16_t = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef unsigned int uint_least32_t;
     * }
     */
    public static final OfInt uint_least32_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned long uint_least64_t;
     * }
     */
    public static final OfLong uint_least64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef signed char int_fast8_t;
     * }
     */
    public static final OfByte int_fast8_t = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef long int_fast16_t;
     * }
     */
    public static final OfLong int_fast16_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long int_fast32_t;
     * }
     */
    public static final OfLong int_fast32_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long int_fast64_t;
     * }
     */
    public static final OfLong int_fast64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned char uint_fast8_t;
     * }
     */
    public static final OfByte uint_fast8_t = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef unsigned long uint_fast16_t;
     * }
     */
    public static final OfLong uint_fast16_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long uint_fast32_t;
     * }
     */
    public static final OfLong uint_fast32_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long uint_fast64_t;
     * }
     */
    public static final OfLong uint_fast64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long intptr_t;
     * }
     */
    public static final OfLong intptr_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long uintptr_t;
     * }
     */
    public static final OfLong uintptr_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long intmax_t;
     * }
     */
    public static final OfLong intmax_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned long uintmax_t;
     * }
     */
    public static final OfLong uintmax_t = JAVA_LONG;
    /**
     * {@snippet :
     * enum AVSampleFormat.AV_SAMPLE_FMT_NONE = -1;
     * }
     */
    public static int AV_SAMPLE_FMT_NONE() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * enum AVSampleFormat.AV_SAMPLE_FMT_U8 = 0;
     * }
     */
    public static int AV_SAMPLE_FMT_U8() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum AVSampleFormat.AV_SAMPLE_FMT_S16 = 1;
     * }
     */
    public static int AV_SAMPLE_FMT_S16() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum AVSampleFormat.AV_SAMPLE_FMT_S32 = 2;
     * }
     */
    public static int AV_SAMPLE_FMT_S32() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum AVSampleFormat.AV_SAMPLE_FMT_FLT = 3;
     * }
     */
    public static int AV_SAMPLE_FMT_FLT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum AVSampleFormat.AV_SAMPLE_FMT_DBL = 4;
     * }
     */
    public static int AV_SAMPLE_FMT_DBL() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum AVSampleFormat.AV_SAMPLE_FMT_U8P = 5;
     * }
     */
    public static int AV_SAMPLE_FMT_U8P() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum AVSampleFormat.AV_SAMPLE_FMT_S16P = 6;
     * }
     */
    public static int AV_SAMPLE_FMT_S16P() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum AVSampleFormat.AV_SAMPLE_FMT_S32P = 7;
     * }
     */
    public static int AV_SAMPLE_FMT_S32P() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum AVSampleFormat.AV_SAMPLE_FMT_FLTP = 8;
     * }
     */
    public static int AV_SAMPLE_FMT_FLTP() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum AVSampleFormat.AV_SAMPLE_FMT_DBLP = 9;
     * }
     */
    public static int AV_SAMPLE_FMT_DBLP() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum AVSampleFormat.AV_SAMPLE_FMT_S64 = 10;
     * }
     */
    public static int AV_SAMPLE_FMT_S64() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum AVSampleFormat.AV_SAMPLE_FMT_S64P = 11;
     * }
     */
    public static int AV_SAMPLE_FMT_S64P() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum AVSampleFormat.AV_SAMPLE_FMT_NB = 12;
     * }
     */
    public static int AV_SAMPLE_FMT_NB() {
        return (int)12L;
    }
    public static MethodHandle av_get_sample_fmt_name$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$2,"av_get_sample_fmt_name");
    }
    /**
     * {@snippet :
     * char* av_get_sample_fmt_name(enum AVSampleFormat sample_fmt);
     * }
     */
    public static MemorySegment av_get_sample_fmt_name(int sample_fmt) {
        var mh$ = av_get_sample_fmt_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(sample_fmt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle av_get_sample_fmt$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$4,"av_get_sample_fmt");
    }
    /**
     * {@snippet :
     * enum AVSampleFormat av_get_sample_fmt(char* name);
     * }
     */
    public static int av_get_sample_fmt(MemorySegment name) {
        var mh$ = av_get_sample_fmt$MH();
        try {
            return (int)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle av_get_alt_sample_fmt$MH() {
        return RuntimeHelper.requireNonNull(constants$0.const$6,"av_get_alt_sample_fmt");
    }
    /**
     * {@snippet :
     * enum AVSampleFormat av_get_alt_sample_fmt(enum AVSampleFormat sample_fmt, int planar);
     * }
     */
    public static int av_get_alt_sample_fmt(int sample_fmt, int planar) {
        var mh$ = av_get_alt_sample_fmt$MH();
        try {
            return (int)mh$.invokeExact(sample_fmt, planar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle av_get_packed_sample_fmt$MH() {
        return RuntimeHelper.requireNonNull(constants$1.const$1,"av_get_packed_sample_fmt");
    }
    /**
     * {@snippet :
     * enum AVSampleFormat av_get_packed_sample_fmt(enum AVSampleFormat sample_fmt);
     * }
     */
    public static int av_get_packed_sample_fmt(int sample_fmt) {
        var mh$ = av_get_packed_sample_fmt$MH();
        try {
            return (int)mh$.invokeExact(sample_fmt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle av_get_planar_sample_fmt$MH() {
        return RuntimeHelper.requireNonNull(constants$1.const$2,"av_get_planar_sample_fmt");
    }
    /**
     * {@snippet :
     * enum AVSampleFormat av_get_planar_sample_fmt(enum AVSampleFormat sample_fmt);
     * }
     */
    public static int av_get_planar_sample_fmt(int sample_fmt) {
        var mh$ = av_get_planar_sample_fmt$MH();
        try {
            return (int)mh$.invokeExact(sample_fmt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle av_get_sample_fmt_string$MH() {
        return RuntimeHelper.requireNonNull(constants$1.const$4,"av_get_sample_fmt_string");
    }
    /**
     * {@snippet :
     * char* av_get_sample_fmt_string(char* buf, int buf_size, enum AVSampleFormat sample_fmt);
     * }
     */
    public static MemorySegment av_get_sample_fmt_string(MemorySegment buf, int buf_size, int sample_fmt) {
        var mh$ = av_get_sample_fmt_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(buf, buf_size, sample_fmt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle av_get_bytes_per_sample$MH() {
        return RuntimeHelper.requireNonNull(constants$1.const$5,"av_get_bytes_per_sample");
    }
    /**
     * {@snippet :
     * int av_get_bytes_per_sample(enum AVSampleFormat sample_fmt);
     * }
     */
    public static int av_get_bytes_per_sample(int sample_fmt) {
        var mh$ = av_get_bytes_per_sample$MH();
        try {
            return (int)mh$.invokeExact(sample_fmt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle av_sample_fmt_is_planar$MH() {
        return RuntimeHelper.requireNonNull(constants$2.const$0,"av_sample_fmt_is_planar");
    }
    /**
     * {@snippet :
     * int av_sample_fmt_is_planar(enum AVSampleFormat sample_fmt);
     * }
     */
    public static int av_sample_fmt_is_planar(int sample_fmt) {
        var mh$ = av_sample_fmt_is_planar$MH();
        try {
            return (int)mh$.invokeExact(sample_fmt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle av_samples_get_buffer_size$MH() {
        return RuntimeHelper.requireNonNull(constants$2.const$2,"av_samples_get_buffer_size");
    }
    /**
     * {@snippet :
     * int av_samples_get_buffer_size(int* linesize, int nb_channels, int nb_samples, enum AVSampleFormat sample_fmt, int align);
     * }
     */
    public static int av_samples_get_buffer_size(MemorySegment linesize, int nb_channels, int nb_samples, int sample_fmt, int align) {
        var mh$ = av_samples_get_buffer_size$MH();
        try {
            return (int)mh$.invokeExact(linesize, nb_channels, nb_samples, sample_fmt, align);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle av_samples_fill_arrays$MH() {
        return RuntimeHelper.requireNonNull(constants$2.const$4,"av_samples_fill_arrays");
    }
    /**
     * {@snippet :
     * int av_samples_fill_arrays(uint8_t** audio_data, int* linesize, const uint8_t* buf, int nb_channels, int nb_samples, enum AVSampleFormat sample_fmt, int align);
     * }
     */
    public static int av_samples_fill_arrays(MemorySegment audio_data, MemorySegment linesize, MemorySegment buf, int nb_channels, int nb_samples, int sample_fmt, int align) {
        var mh$ = av_samples_fill_arrays$MH();
        try {
            return (int)mh$.invokeExact(audio_data, linesize, buf, nb_channels, nb_samples, sample_fmt, align);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle av_samples_alloc$MH() {
        return RuntimeHelper.requireNonNull(constants$2.const$6,"av_samples_alloc");
    }
    /**
     * {@snippet :
     * int av_samples_alloc(uint8_t** audio_data, int* linesize, int nb_channels, int nb_samples, enum AVSampleFormat sample_fmt, int align);
     * }
     */
    public static int av_samples_alloc(MemorySegment audio_data, MemorySegment linesize, int nb_channels, int nb_samples, int sample_fmt, int align) {
        var mh$ = av_samples_alloc$MH();
        try {
            return (int)mh$.invokeExact(audio_data, linesize, nb_channels, nb_samples, sample_fmt, align);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle av_samples_alloc_array_and_samples$MH() {
        return RuntimeHelper.requireNonNull(constants$3.const$0,"av_samples_alloc_array_and_samples");
    }
    /**
     * {@snippet :
     * int av_samples_alloc_array_and_samples(uint8_t*** audio_data, int* linesize, int nb_channels, int nb_samples, enum AVSampleFormat sample_fmt, int align);
     * }
     */
    public static int av_samples_alloc_array_and_samples(MemorySegment audio_data, MemorySegment linesize, int nb_channels, int nb_samples, int sample_fmt, int align) {
        var mh$ = av_samples_alloc_array_and_samples$MH();
        try {
            return (int)mh$.invokeExact(audio_data, linesize, nb_channels, nb_samples, sample_fmt, align);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle av_samples_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$3.const$2,"av_samples_copy");
    }
    /**
     * {@snippet :
     * int av_samples_copy(uint8_t** dst, uint8_t** src, int dst_offset, int src_offset, int nb_samples, int nb_channels, enum AVSampleFormat sample_fmt);
     * }
     */
    public static int av_samples_copy(MemorySegment dst, MemorySegment src, int dst_offset, int src_offset, int nb_samples, int nb_channels, int sample_fmt) {
        var mh$ = av_samples_copy$MH();
        try {
            return (int)mh$.invokeExact(dst, src, dst_offset, src_offset, nb_samples, nb_channels, sample_fmt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle av_samples_set_silence$MH() {
        return RuntimeHelper.requireNonNull(constants$3.const$3,"av_samples_set_silence");
    }
    /**
     * {@snippet :
     * int av_samples_set_silence(uint8_t** audio_data, int offset, int nb_samples, int nb_channels, enum AVSampleFormat sample_fmt);
     * }
     */
    public static int av_samples_set_silence(MemorySegment audio_data, int offset, int nb_samples, int nb_channels, int sample_fmt) {
        var mh$ = av_samples_set_silence$MH();
        try {
            return (int)mh$.invokeExact(audio_data, offset, nb_samples, nb_channels, sample_fmt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle avutil_version$MH() {
        return RuntimeHelper.requireNonNull(constants$3.const$5,"avutil_version");
    }
    /**
     * {@snippet :
     * unsigned int avutil_version();
     * }
     */
    public static int avutil_version() {
        var mh$ = avutil_version$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle av_version_info$MH() {
        return RuntimeHelper.requireNonNull(constants$4.const$1,"av_version_info");
    }
    /**
     * {@snippet :
     * char* av_version_info();
     * }
     */
    public static MemorySegment av_version_info() {
        var mh$ = av_version_info$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle avutil_configuration$MH() {
        return RuntimeHelper.requireNonNull(constants$4.const$2,"avutil_configuration");
    }
    /**
     * {@snippet :
     * char* avutil_configuration();
     * }
     */
    public static MemorySegment avutil_configuration() {
        var mh$ = avutil_configuration$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle avutil_license$MH() {
        return RuntimeHelper.requireNonNull(constants$4.const$3,"avutil_license");
    }
    /**
     * {@snippet :
     * char* avutil_license();
     * }
     */
    public static MemorySegment avutil_license() {
        var mh$ = avutil_license$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum AVMediaType.AVMEDIA_TYPE_UNKNOWN = -1;
     * }
     */
    public static int AVMEDIA_TYPE_UNKNOWN() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * enum AVMediaType.AVMEDIA_TYPE_VIDEO = 0;
     * }
     */
    public static int AVMEDIA_TYPE_VIDEO() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum AVMediaType.AVMEDIA_TYPE_AUDIO = 1;
     * }
     */
    public static int AVMEDIA_TYPE_AUDIO() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum AVMediaType.AVMEDIA_TYPE_DATA = 2;
     * }
     */
    public static int AVMEDIA_TYPE_DATA() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum AVMediaType.AVMEDIA_TYPE_SUBTITLE = 3;
     * }
     */
    public static int AVMEDIA_TYPE_SUBTITLE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum AVMediaType.AVMEDIA_TYPE_ATTACHMENT = 4;
     * }
     */
    public static int AVMEDIA_TYPE_ATTACHMENT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum AVMediaType.AVMEDIA_TYPE_NB = 5;
     * }
     */
    public static int AVMEDIA_TYPE_NB() {
        return (int)5L;
    }
    public static MethodHandle av_get_media_type_string$MH() {
        return RuntimeHelper.requireNonNull(constants$4.const$4,"av_get_media_type_string");
    }
    /**
     * {@snippet :
     * char* av_get_media_type_string(enum AVMediaType media_type);
     * }
     */
    public static MemorySegment av_get_media_type_string(int media_type) {
        var mh$ = av_get_media_type_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(media_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum AVPictureType.AV_PICTURE_TYPE_NONE = 0;
     * }
     */
    public static int AV_PICTURE_TYPE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum AVPictureType.AV_PICTURE_TYPE_I = 1;
     * }
     */
    public static int AV_PICTURE_TYPE_I() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum AVPictureType.AV_PICTURE_TYPE_P = 2;
     * }
     */
    public static int AV_PICTURE_TYPE_P() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum AVPictureType.AV_PICTURE_TYPE_B = 3;
     * }
     */
    public static int AV_PICTURE_TYPE_B() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum AVPictureType.AV_PICTURE_TYPE_S = 4;
     * }
     */
    public static int AV_PICTURE_TYPE_S() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum AVPictureType.AV_PICTURE_TYPE_SI = 5;
     * }
     */
    public static int AV_PICTURE_TYPE_SI() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum AVPictureType.AV_PICTURE_TYPE_SP = 6;
     * }
     */
    public static int AV_PICTURE_TYPE_SP() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum AVPictureType.AV_PICTURE_TYPE_BI = 7;
     * }
     */
    public static int AV_PICTURE_TYPE_BI() {
        return (int)7L;
    }
    public static MethodHandle av_get_picture_type_char$MH() {
        return RuntimeHelper.requireNonNull(constants$4.const$6,"av_get_picture_type_char");
    }
    /**
     * {@snippet :
     * char av_get_picture_type_char(enum AVPictureType pict_type);
     * }
     */
    public static byte av_get_picture_type_char(int pict_type) {
        var mh$ = av_get_picture_type_char$MH();
        try {
            return (byte)mh$.invokeExact(pict_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __errno_location$MH() {
        return RuntimeHelper.requireNonNull(constants$5.const$0,"__errno_location");
    }
    /**
     * {@snippet :
     * int* __errno_location();
     * }
     */
    public static MemorySegment __errno_location() {
        var mh$ = __errno_location$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef int __gwchar_t;
     * }
     */
    public static final OfInt __gwchar_t = JAVA_INT;
    public static MethodHandle imaxabs$MH() {
        return RuntimeHelper.requireNonNull(constants$5.const$5,"imaxabs");
    }
    /**
     * {@snippet :
     * intmax_t imaxabs(intmax_t __n);
     * }
     */
    public static long imaxabs(long __n) {
        var mh$ = imaxabs$MH();
        try {
            return (long)mh$.invokeExact(__n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle imaxdiv$MH() {
        return RuntimeHelper.requireNonNull(constants$6.const$1,"imaxdiv");
    }
    /**
     * {@snippet :
     * imaxdiv_t imaxdiv(intmax_t __numer, intmax_t __denom);
     * }
     */
    public static MemorySegment imaxdiv(SegmentAllocator allocator, long __numer, long __denom) {
        var mh$ = imaxdiv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allocator, __numer, __denom);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtoimax$MH() {
        return RuntimeHelper.requireNonNull(constants$6.const$3,"strtoimax");
    }
    /**
     * {@snippet :
     * intmax_t strtoimax(char* __nptr, char** __endptr, int __base);
     * }
     */
    public static long strtoimax(MemorySegment __nptr, MemorySegment __endptr, int __base) {
        var mh$ = strtoimax$MH();
        try {
            return (long)mh$.invokeExact(__nptr, __endptr, __base);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtoumax$MH() {
        return RuntimeHelper.requireNonNull(constants$6.const$4,"strtoumax");
    }
    /**
     * {@snippet :
     * uintmax_t strtoumax(char* __nptr, char** __endptr, int __base);
     * }
     */
    public static long strtoumax(MemorySegment __nptr, MemorySegment __endptr, int __base) {
        var mh$ = strtoumax$MH();
        try {
            return (long)mh$.invokeExact(__nptr, __endptr, __base);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstoimax$MH() {
        return RuntimeHelper.requireNonNull(constants$6.const$5,"wcstoimax");
    }
    /**
     * {@snippet :
     * intmax_t wcstoimax(const __gwchar_t* __nptr, __gwchar_t** __endptr, int __base);
     * }
     */
    public static long wcstoimax(MemorySegment __nptr, MemorySegment __endptr, int __base) {
        var mh$ = wcstoimax$MH();
        try {
            return (long)mh$.invokeExact(__nptr, __endptr, __base);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstoumax$MH() {
        return RuntimeHelper.requireNonNull(constants$7.const$0,"wcstoumax");
    }
    /**
     * {@snippet :
     * uintmax_t wcstoumax(const __gwchar_t* __nptr, __gwchar_t** __endptr, int __base);
     * }
     */
    public static long wcstoumax(MemorySegment __nptr, MemorySegment __endptr, int __base) {
        var mh$ = wcstoumax$MH();
        try {
            return (long)mh$.invokeExact(__nptr, __endptr, __base);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef float _Float32;
     * }
     */
    public static final OfFloat _Float32 = JAVA_FLOAT;
    /**
     * {@snippet :
     * typedef double _Float64;
     * }
     */
    public static final OfDouble _Float64 = JAVA_DOUBLE;
    /**
     * {@snippet :
     * typedef double _Float32x;
     * }
     */
    public static final OfDouble _Float32x = JAVA_DOUBLE;
    /**
     * {@snippet :
     * typedef float float_t;
     * }
     */
    public static final OfFloat float_t = JAVA_FLOAT;
    /**
     * {@snippet :
     * typedef double double_t;
     * }
     */
    public static final OfDouble double_t = JAVA_DOUBLE;
    public static MethodHandle __fpclassify$MH() {
        return RuntimeHelper.requireNonNull(constants$7.const$2,"__fpclassify");
    }
    /**
     * {@snippet :
     * int __fpclassify(double __value);
     * }
     */
    public static int __fpclassify(double __value) {
        var mh$ = __fpclassify$MH();
        try {
            return (int)mh$.invokeExact(__value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __signbit$MH() {
        return RuntimeHelper.requireNonNull(constants$7.const$3,"__signbit");
    }
    /**
     * {@snippet :
     * int __signbit(double __value);
     * }
     */
    public static int __signbit(double __value) {
        var mh$ = __signbit$MH();
        try {
            return (int)mh$.invokeExact(__value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __isinf$MH() {
        return RuntimeHelper.requireNonNull(constants$7.const$4,"__isinf");
    }
    /**
     * {@snippet :
     * int __isinf(double __value);
     * }
     */
    public static int __isinf(double __value) {
        var mh$ = __isinf$MH();
        try {
            return (int)mh$.invokeExact(__value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __finite$MH() {
        return RuntimeHelper.requireNonNull(constants$7.const$5,"__finite");
    }
    /**
     * {@snippet :
     * int __finite(double __value);
     * }
     */
    public static int __finite(double __value) {
        var mh$ = __finite$MH();
        try {
            return (int)mh$.invokeExact(__value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __isnan$MH() {
        return RuntimeHelper.requireNonNull(constants$8.const$0,"__isnan");
    }
    /**
     * {@snippet :
     * int __isnan(double __value);
     * }
     */
    public static int __isnan(double __value) {
        var mh$ = __isnan$MH();
        try {
            return (int)mh$.invokeExact(__value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __iseqsig$MH() {
        return RuntimeHelper.requireNonNull(constants$8.const$2,"__iseqsig");
    }
    /**
     * {@snippet :
     * int __iseqsig(double __x, double __y);
     * }
     */
    public static int __iseqsig(double __x, double __y) {
        var mh$ = __iseqsig$MH();
        try {
            return (int)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __issignaling$MH() {
        return RuntimeHelper.requireNonNull(constants$8.const$3,"__issignaling");
    }
    /**
     * {@snippet :
     * int __issignaling(double __value);
     * }
     */
    public static int __issignaling(double __value) {
        var mh$ = __issignaling$MH();
        try {
            return (int)mh$.invokeExact(__value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle acos$MH() {
        return RuntimeHelper.requireNonNull(constants$8.const$5,"acos");
    }
    /**
     * {@snippet :
     * double acos(double __x);
     * }
     */
    public static double acos(double __x) {
        var mh$ = acos$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __acos$MH() {
        return RuntimeHelper.requireNonNull(constants$9.const$0,"__acos");
    }
    /**
     * {@snippet :
     * double __acos(double __x);
     * }
     */
    public static double __acos(double __x) {
        var mh$ = __acos$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle asin$MH() {
        return RuntimeHelper.requireNonNull(constants$9.const$1,"asin");
    }
    /**
     * {@snippet :
     * double asin(double __x);
     * }
     */
    public static double asin(double __x) {
        var mh$ = asin$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __asin$MH() {
        return RuntimeHelper.requireNonNull(constants$9.const$2,"__asin");
    }
    /**
     * {@snippet :
     * double __asin(double __x);
     * }
     */
    public static double __asin(double __x) {
        var mh$ = __asin$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atan$MH() {
        return RuntimeHelper.requireNonNull(constants$9.const$3,"atan");
    }
    /**
     * {@snippet :
     * double atan(double __x);
     * }
     */
    public static double atan(double __x) {
        var mh$ = atan$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __atan$MH() {
        return RuntimeHelper.requireNonNull(constants$9.const$4,"__atan");
    }
    /**
     * {@snippet :
     * double __atan(double __x);
     * }
     */
    public static double __atan(double __x) {
        var mh$ = __atan$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atan2$MH() {
        return RuntimeHelper.requireNonNull(constants$9.const$6,"atan2");
    }
    /**
     * {@snippet :
     * double atan2(double __y, double __x);
     * }
     */
    public static double atan2(double __y, double __x) {
        var mh$ = atan2$MH();
        try {
            return (double)mh$.invokeExact(__y, __x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __atan2$MH() {
        return RuntimeHelper.requireNonNull(constants$10.const$0,"__atan2");
    }
    /**
     * {@snippet :
     * double __atan2(double __y, double __x);
     * }
     */
    public static double __atan2(double __y, double __x) {
        var mh$ = __atan2$MH();
        try {
            return (double)mh$.invokeExact(__y, __x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cos$MH() {
        return RuntimeHelper.requireNonNull(constants$10.const$1,"cos");
    }
    /**
     * {@snippet :
     * double cos(double __x);
     * }
     */
    public static double cos(double __x) {
        var mh$ = cos$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __cos$MH() {
        return RuntimeHelper.requireNonNull(constants$10.const$2,"__cos");
    }
    /**
     * {@snippet :
     * double __cos(double __x);
     * }
     */
    public static double __cos(double __x) {
        var mh$ = __cos$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sin$MH() {
        return RuntimeHelper.requireNonNull(constants$10.const$3,"sin");
    }
    /**
     * {@snippet :
     * double sin(double __x);
     * }
     */
    public static double sin(double __x) {
        var mh$ = sin$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __sin$MH() {
        return RuntimeHelper.requireNonNull(constants$10.const$4,"__sin");
    }
    /**
     * {@snippet :
     * double __sin(double __x);
     * }
     */
    public static double __sin(double __x) {
        var mh$ = __sin$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tan$MH() {
        return RuntimeHelper.requireNonNull(constants$10.const$5,"tan");
    }
    /**
     * {@snippet :
     * double tan(double __x);
     * }
     */
    public static double tan(double __x) {
        var mh$ = tan$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __tan$MH() {
        return RuntimeHelper.requireNonNull(constants$11.const$0,"__tan");
    }
    /**
     * {@snippet :
     * double __tan(double __x);
     * }
     */
    public static double __tan(double __x) {
        var mh$ = __tan$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cosh$MH() {
        return RuntimeHelper.requireNonNull(constants$11.const$1,"cosh");
    }
    /**
     * {@snippet :
     * double cosh(double __x);
     * }
     */
    public static double cosh(double __x) {
        var mh$ = cosh$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __cosh$MH() {
        return RuntimeHelper.requireNonNull(constants$11.const$2,"__cosh");
    }
    /**
     * {@snippet :
     * double __cosh(double __x);
     * }
     */
    public static double __cosh(double __x) {
        var mh$ = __cosh$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sinh$MH() {
        return RuntimeHelper.requireNonNull(constants$11.const$3,"sinh");
    }
    /**
     * {@snippet :
     * double sinh(double __x);
     * }
     */
    public static double sinh(double __x) {
        var mh$ = sinh$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __sinh$MH() {
        return RuntimeHelper.requireNonNull(constants$11.const$4,"__sinh");
    }
    /**
     * {@snippet :
     * double __sinh(double __x);
     * }
     */
    public static double __sinh(double __x) {
        var mh$ = __sinh$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tanh$MH() {
        return RuntimeHelper.requireNonNull(constants$11.const$5,"tanh");
    }
    /**
     * {@snippet :
     * double tanh(double __x);
     * }
     */
    public static double tanh(double __x) {
        var mh$ = tanh$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __tanh$MH() {
        return RuntimeHelper.requireNonNull(constants$12.const$0,"__tanh");
    }
    /**
     * {@snippet :
     * double __tanh(double __x);
     * }
     */
    public static double __tanh(double __x) {
        var mh$ = __tanh$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle acosh$MH() {
        return RuntimeHelper.requireNonNull(constants$12.const$1,"acosh");
    }
    /**
     * {@snippet :
     * double acosh(double __x);
     * }
     */
    public static double acosh(double __x) {
        var mh$ = acosh$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __acosh$MH() {
        return RuntimeHelper.requireNonNull(constants$12.const$2,"__acosh");
    }
    /**
     * {@snippet :
     * double __acosh(double __x);
     * }
     */
    public static double __acosh(double __x) {
        var mh$ = __acosh$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle asinh$MH() {
        return RuntimeHelper.requireNonNull(constants$12.const$3,"asinh");
    }
    /**
     * {@snippet :
     * double asinh(double __x);
     * }
     */
    public static double asinh(double __x) {
        var mh$ = asinh$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __asinh$MH() {
        return RuntimeHelper.requireNonNull(constants$12.const$4,"__asinh");
    }
    /**
     * {@snippet :
     * double __asinh(double __x);
     * }
     */
    public static double __asinh(double __x) {
        var mh$ = __asinh$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atanh$MH() {
        return RuntimeHelper.requireNonNull(constants$12.const$5,"atanh");
    }
    /**
     * {@snippet :
     * double atanh(double __x);
     * }
     */
    public static double atanh(double __x) {
        var mh$ = atanh$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __atanh$MH() {
        return RuntimeHelper.requireNonNull(constants$13.const$0,"__atanh");
    }
    /**
     * {@snippet :
     * double __atanh(double __x);
     * }
     */
    public static double __atanh(double __x) {
        var mh$ = __atanh$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle exp$MH() {
        return RuntimeHelper.requireNonNull(constants$13.const$1,"exp");
    }
    /**
     * {@snippet :
     * double exp(double __x);
     * }
     */
    public static double exp(double __x) {
        var mh$ = exp$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __exp$MH() {
        return RuntimeHelper.requireNonNull(constants$13.const$2,"__exp");
    }
    /**
     * {@snippet :
     * double __exp(double __x);
     * }
     */
    public static double __exp(double __x) {
        var mh$ = __exp$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle frexp$MH() {
        return RuntimeHelper.requireNonNull(constants$13.const$4,"frexp");
    }
    /**
     * {@snippet :
     * double frexp(double __x, int* __exponent);
     * }
     */
    public static double frexp(double __x, MemorySegment __exponent) {
        var mh$ = frexp$MH();
        try {
            return (double)mh$.invokeExact(__x, __exponent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __frexp$MH() {
        return RuntimeHelper.requireNonNull(constants$13.const$5,"__frexp");
    }
    /**
     * {@snippet :
     * double __frexp(double __x, int* __exponent);
     * }
     */
    public static double __frexp(double __x, MemorySegment __exponent) {
        var mh$ = __frexp$MH();
        try {
            return (double)mh$.invokeExact(__x, __exponent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ldexp$MH() {
        return RuntimeHelper.requireNonNull(constants$14.const$1,"ldexp");
    }
    /**
     * {@snippet :
     * double ldexp(double __x, int __exponent);
     * }
     */
    public static double ldexp(double __x, int __exponent) {
        var mh$ = ldexp$MH();
        try {
            return (double)mh$.invokeExact(__x, __exponent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ldexp$MH() {
        return RuntimeHelper.requireNonNull(constants$14.const$2,"__ldexp");
    }
    /**
     * {@snippet :
     * double __ldexp(double __x, int __exponent);
     * }
     */
    public static double __ldexp(double __x, int __exponent) {
        var mh$ = __ldexp$MH();
        try {
            return (double)mh$.invokeExact(__x, __exponent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle log$MH() {
        return RuntimeHelper.requireNonNull(constants$14.const$3,"log");
    }
    /**
     * {@snippet :
     * double log(double __x);
     * }
     */
    public static double log(double __x) {
        var mh$ = log$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __log$MH() {
        return RuntimeHelper.requireNonNull(constants$14.const$4,"__log");
    }
    /**
     * {@snippet :
     * double __log(double __x);
     * }
     */
    public static double __log(double __x) {
        var mh$ = __log$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle log10$MH() {
        return RuntimeHelper.requireNonNull(constants$14.const$5,"log10");
    }
    /**
     * {@snippet :
     * double log10(double __x);
     * }
     */
    public static double log10(double __x) {
        var mh$ = log10$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __log10$MH() {
        return RuntimeHelper.requireNonNull(constants$15.const$0,"__log10");
    }
    /**
     * {@snippet :
     * double __log10(double __x);
     * }
     */
    public static double __log10(double __x) {
        var mh$ = __log10$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle modf$MH() {
        return RuntimeHelper.requireNonNull(constants$15.const$1,"modf");
    }
    /**
     * {@snippet :
     * double modf(double __x, double* __iptr);
     * }
     */
    public static double modf(double __x, MemorySegment __iptr) {
        var mh$ = modf$MH();
        try {
            return (double)mh$.invokeExact(__x, __iptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __modf$MH() {
        return RuntimeHelper.requireNonNull(constants$15.const$2,"__modf");
    }
    /**
     * {@snippet :
     * double __modf(double __x, double* __iptr);
     * }
     */
    public static double __modf(double __x, MemorySegment __iptr) {
        var mh$ = __modf$MH();
        try {
            return (double)mh$.invokeExact(__x, __iptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle expm1$MH() {
        return RuntimeHelper.requireNonNull(constants$15.const$3,"expm1");
    }
    /**
     * {@snippet :
     * double expm1(double __x);
     * }
     */
    public static double expm1(double __x) {
        var mh$ = expm1$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __expm1$MH() {
        return RuntimeHelper.requireNonNull(constants$15.const$4,"__expm1");
    }
    /**
     * {@snippet :
     * double __expm1(double __x);
     * }
     */
    public static double __expm1(double __x) {
        var mh$ = __expm1$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle log1p$MH() {
        return RuntimeHelper.requireNonNull(constants$15.const$5,"log1p");
    }
    /**
     * {@snippet :
     * double log1p(double __x);
     * }
     */
    public static double log1p(double __x) {
        var mh$ = log1p$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __log1p$MH() {
        return RuntimeHelper.requireNonNull(constants$16.const$0,"__log1p");
    }
    /**
     * {@snippet :
     * double __log1p(double __x);
     * }
     */
    public static double __log1p(double __x) {
        var mh$ = __log1p$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle logb$MH() {
        return RuntimeHelper.requireNonNull(constants$16.const$1,"logb");
    }
    /**
     * {@snippet :
     * double logb(double __x);
     * }
     */
    public static double logb(double __x) {
        var mh$ = logb$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __logb$MH() {
        return RuntimeHelper.requireNonNull(constants$16.const$2,"__logb");
    }
    /**
     * {@snippet :
     * double __logb(double __x);
     * }
     */
    public static double __logb(double __x) {
        var mh$ = __logb$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle exp2$MH() {
        return RuntimeHelper.requireNonNull(constants$16.const$3,"exp2");
    }
    /**
     * {@snippet :
     * double exp2(double __x);
     * }
     */
    public static double exp2(double __x) {
        var mh$ = exp2$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __exp2$MH() {
        return RuntimeHelper.requireNonNull(constants$16.const$4,"__exp2");
    }
    /**
     * {@snippet :
     * double __exp2(double __x);
     * }
     */
    public static double __exp2(double __x) {
        var mh$ = __exp2$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle log2$MH() {
        return RuntimeHelper.requireNonNull(constants$16.const$5,"log2");
    }
    /**
     * {@snippet :
     * double log2(double __x);
     * }
     */
    public static double log2(double __x) {
        var mh$ = log2$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __log2$MH() {
        return RuntimeHelper.requireNonNull(constants$17.const$0,"__log2");
    }
    /**
     * {@snippet :
     * double __log2(double __x);
     * }
     */
    public static double __log2(double __x) {
        var mh$ = __log2$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pow$MH() {
        return RuntimeHelper.requireNonNull(constants$17.const$1,"pow");
    }
    /**
     * {@snippet :
     * double pow(double __x, double __y);
     * }
     */
    public static double pow(double __x, double __y) {
        var mh$ = pow$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __pow$MH() {
        return RuntimeHelper.requireNonNull(constants$17.const$2,"__pow");
    }
    /**
     * {@snippet :
     * double __pow(double __x, double __y);
     * }
     */
    public static double __pow(double __x, double __y) {
        var mh$ = __pow$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sqrt$MH() {
        return RuntimeHelper.requireNonNull(constants$17.const$3,"sqrt");
    }
    /**
     * {@snippet :
     * double sqrt(double __x);
     * }
     */
    public static double sqrt(double __x) {
        var mh$ = sqrt$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __sqrt$MH() {
        return RuntimeHelper.requireNonNull(constants$17.const$4,"__sqrt");
    }
    /**
     * {@snippet :
     * double __sqrt(double __x);
     * }
     */
    public static double __sqrt(double __x) {
        var mh$ = __sqrt$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle hypot$MH() {
        return RuntimeHelper.requireNonNull(constants$17.const$5,"hypot");
    }
    /**
     * {@snippet :
     * double hypot(double __x, double __y);
     * }
     */
    public static double hypot(double __x, double __y) {
        var mh$ = hypot$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __hypot$MH() {
        return RuntimeHelper.requireNonNull(constants$18.const$0,"__hypot");
    }
    /**
     * {@snippet :
     * double __hypot(double __x, double __y);
     * }
     */
    public static double __hypot(double __x, double __y) {
        var mh$ = __hypot$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cbrt$MH() {
        return RuntimeHelper.requireNonNull(constants$18.const$1,"cbrt");
    }
    /**
     * {@snippet :
     * double cbrt(double __x);
     * }
     */
    public static double cbrt(double __x) {
        var mh$ = cbrt$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __cbrt$MH() {
        return RuntimeHelper.requireNonNull(constants$18.const$2,"__cbrt");
    }
    /**
     * {@snippet :
     * double __cbrt(double __x);
     * }
     */
    public static double __cbrt(double __x) {
        var mh$ = __cbrt$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ceil$MH() {
        return RuntimeHelper.requireNonNull(constants$18.const$3,"ceil");
    }
    /**
     * {@snippet :
     * double ceil(double __x);
     * }
     */
    public static double ceil(double __x) {
        var mh$ = ceil$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ceil$MH() {
        return RuntimeHelper.requireNonNull(constants$18.const$4,"__ceil");
    }
    /**
     * {@snippet :
     * double __ceil(double __x);
     * }
     */
    public static double __ceil(double __x) {
        var mh$ = __ceil$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fabs$MH() {
        return RuntimeHelper.requireNonNull(constants$18.const$5,"fabs");
    }
    /**
     * {@snippet :
     * double fabs(double __x);
     * }
     */
    public static double fabs(double __x) {
        var mh$ = fabs$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __fabs$MH() {
        return RuntimeHelper.requireNonNull(constants$19.const$0,"__fabs");
    }
    /**
     * {@snippet :
     * double __fabs(double __x);
     * }
     */
    public static double __fabs(double __x) {
        var mh$ = __fabs$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle floor$MH() {
        return RuntimeHelper.requireNonNull(constants$19.const$1,"floor");
    }
    /**
     * {@snippet :
     * double floor(double __x);
     * }
     */
    public static double floor(double __x) {
        var mh$ = floor$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __floor$MH() {
        return RuntimeHelper.requireNonNull(constants$19.const$2,"__floor");
    }
    /**
     * {@snippet :
     * double __floor(double __x);
     * }
     */
    public static double __floor(double __x) {
        var mh$ = __floor$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fmod$MH() {
        return RuntimeHelper.requireNonNull(constants$19.const$3,"fmod");
    }
    /**
     * {@snippet :
     * double fmod(double __x, double __y);
     * }
     */
    public static double fmod(double __x, double __y) {
        var mh$ = fmod$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __fmod$MH() {
        return RuntimeHelper.requireNonNull(constants$19.const$4,"__fmod");
    }
    /**
     * {@snippet :
     * double __fmod(double __x, double __y);
     * }
     */
    public static double __fmod(double __x, double __y) {
        var mh$ = __fmod$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle isinf$MH() {
        return RuntimeHelper.requireNonNull(constants$19.const$5,"isinf");
    }
    /**
     * {@snippet :
     * int isinf(double __value);
     * }
     */
    public static int isinf(double __value) {
        var mh$ = isinf$MH();
        try {
            return (int)mh$.invokeExact(__value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle finite$MH() {
        return RuntimeHelper.requireNonNull(constants$20.const$0,"finite");
    }
    /**
     * {@snippet :
     * int finite(double __value);
     * }
     */
    public static int finite(double __value) {
        var mh$ = finite$MH();
        try {
            return (int)mh$.invokeExact(__value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle drem$MH() {
        return RuntimeHelper.requireNonNull(constants$20.const$1,"drem");
    }
    /**
     * {@snippet :
     * double drem(double __x, double __y);
     * }
     */
    public static double drem(double __x, double __y) {
        var mh$ = drem$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __drem$MH() {
        return RuntimeHelper.requireNonNull(constants$20.const$2,"__drem");
    }
    /**
     * {@snippet :
     * double __drem(double __x, double __y);
     * }
     */
    public static double __drem(double __x, double __y) {
        var mh$ = __drem$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle significand$MH() {
        return RuntimeHelper.requireNonNull(constants$20.const$3,"significand");
    }
    /**
     * {@snippet :
     * double significand(double __x);
     * }
     */
    public static double significand(double __x) {
        var mh$ = significand$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __significand$MH() {
        return RuntimeHelper.requireNonNull(constants$20.const$4,"__significand");
    }
    /**
     * {@snippet :
     * double __significand(double __x);
     * }
     */
    public static double __significand(double __x) {
        var mh$ = __significand$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle copysign$MH() {
        return RuntimeHelper.requireNonNull(constants$20.const$5,"copysign");
    }
    /**
     * {@snippet :
     * double copysign(double __x, double __y);
     * }
     */
    public static double copysign(double __x, double __y) {
        var mh$ = copysign$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __copysign$MH() {
        return RuntimeHelper.requireNonNull(constants$21.const$0,"__copysign");
    }
    /**
     * {@snippet :
     * double __copysign(double __x, double __y);
     * }
     */
    public static double __copysign(double __x, double __y) {
        var mh$ = __copysign$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle nan$MH() {
        return RuntimeHelper.requireNonNull(constants$21.const$2,"nan");
    }
    /**
     * {@snippet :
     * double nan(char* __tagb);
     * }
     */
    public static double nan(MemorySegment __tagb) {
        var mh$ = nan$MH();
        try {
            return (double)mh$.invokeExact(__tagb);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __nan$MH() {
        return RuntimeHelper.requireNonNull(constants$21.const$3,"__nan");
    }
    /**
     * {@snippet :
     * double __nan(char* __tagb);
     * }
     */
    public static double __nan(MemorySegment __tagb) {
        var mh$ = __nan$MH();
        try {
            return (double)mh$.invokeExact(__tagb);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle isnan$MH() {
        return RuntimeHelper.requireNonNull(constants$21.const$4,"isnan");
    }
    /**
     * {@snippet :
     * int isnan(double __value);
     * }
     */
    public static int isnan(double __value) {
        var mh$ = isnan$MH();
        try {
            return (int)mh$.invokeExact(__value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle j0$MH() {
        return RuntimeHelper.requireNonNull(constants$21.const$5,"j0");
    }
    /**
     * {@snippet :
     * double j0(double);
     * }
     */
    public static double j0(double x0) {
        var mh$ = j0$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __j0$MH() {
        return RuntimeHelper.requireNonNull(constants$22.const$0,"__j0");
    }
    /**
     * {@snippet :
     * double __j0(double);
     * }
     */
    public static double __j0(double x0) {
        var mh$ = __j0$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle j1$MH() {
        return RuntimeHelper.requireNonNull(constants$22.const$1,"j1");
    }
    /**
     * {@snippet :
     * double j1(double);
     * }
     */
    public static double j1(double x0) {
        var mh$ = j1$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __j1$MH() {
        return RuntimeHelper.requireNonNull(constants$22.const$2,"__j1");
    }
    /**
     * {@snippet :
     * double __j1(double);
     * }
     */
    public static double __j1(double x0) {
        var mh$ = __j1$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle jn$MH() {
        return RuntimeHelper.requireNonNull(constants$22.const$4,"jn");
    }
    /**
     * {@snippet :
     * double jn(int, double);
     * }
     */
    public static double jn(int x0, double x1) {
        var mh$ = jn$MH();
        try {
            return (double)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __jn$MH() {
        return RuntimeHelper.requireNonNull(constants$22.const$5,"__jn");
    }
    /**
     * {@snippet :
     * double __jn(int, double);
     * }
     */
    public static double __jn(int x0, double x1) {
        var mh$ = __jn$MH();
        try {
            return (double)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle y0$MH() {
        return RuntimeHelper.requireNonNull(constants$23.const$0,"y0");
    }
    /**
     * {@snippet :
     * double y0(double);
     * }
     */
    public static double y0(double x0) {
        var mh$ = y0$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __y0$MH() {
        return RuntimeHelper.requireNonNull(constants$23.const$1,"__y0");
    }
    /**
     * {@snippet :
     * double __y0(double);
     * }
     */
    public static double __y0(double x0) {
        var mh$ = __y0$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle y1$MH() {
        return RuntimeHelper.requireNonNull(constants$23.const$2,"y1");
    }
    /**
     * {@snippet :
     * double y1(double);
     * }
     */
    public static double y1(double x0) {
        var mh$ = y1$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __y1$MH() {
        return RuntimeHelper.requireNonNull(constants$23.const$3,"__y1");
    }
    /**
     * {@snippet :
     * double __y1(double);
     * }
     */
    public static double __y1(double x0) {
        var mh$ = __y1$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle yn$MH() {
        return RuntimeHelper.requireNonNull(constants$23.const$4,"yn");
    }
    /**
     * {@snippet :
     * double yn(int, double);
     * }
     */
    public static double yn(int x0, double x1) {
        var mh$ = yn$MH();
        try {
            return (double)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __yn$MH() {
        return RuntimeHelper.requireNonNull(constants$23.const$5,"__yn");
    }
    /**
     * {@snippet :
     * double __yn(int, double);
     * }
     */
    public static double __yn(int x0, double x1) {
        var mh$ = __yn$MH();
        try {
            return (double)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle erf$MH() {
        return RuntimeHelper.requireNonNull(constants$24.const$0,"erf");
    }
    /**
     * {@snippet :
     * double erf(double);
     * }
     */
    public static double erf(double x0) {
        var mh$ = erf$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __erf$MH() {
        return RuntimeHelper.requireNonNull(constants$24.const$1,"__erf");
    }
    /**
     * {@snippet :
     * double __erf(double);
     * }
     */
    public static double __erf(double x0) {
        var mh$ = __erf$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle erfc$MH() {
        return RuntimeHelper.requireNonNull(constants$24.const$2,"erfc");
    }
    /**
     * {@snippet :
     * double erfc(double);
     * }
     */
    public static double erfc(double x0) {
        var mh$ = erfc$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __erfc$MH() {
        return RuntimeHelper.requireNonNull(constants$24.const$3,"__erfc");
    }
    /**
     * {@snippet :
     * double __erfc(double);
     * }
     */
    public static double __erfc(double x0) {
        var mh$ = __erfc$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lgamma$MH() {
        return RuntimeHelper.requireNonNull(constants$24.const$4,"lgamma");
    }
    /**
     * {@snippet :
     * double lgamma(double);
     * }
     */
    public static double lgamma(double x0) {
        var mh$ = lgamma$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __lgamma$MH() {
        return RuntimeHelper.requireNonNull(constants$24.const$5,"__lgamma");
    }
    /**
     * {@snippet :
     * double __lgamma(double);
     * }
     */
    public static double __lgamma(double x0) {
        var mh$ = __lgamma$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tgamma$MH() {
        return RuntimeHelper.requireNonNull(constants$25.const$0,"tgamma");
    }
    /**
     * {@snippet :
     * double tgamma(double);
     * }
     */
    public static double tgamma(double x0) {
        var mh$ = tgamma$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __tgamma$MH() {
        return RuntimeHelper.requireNonNull(constants$25.const$1,"__tgamma");
    }
    /**
     * {@snippet :
     * double __tgamma(double);
     * }
     */
    public static double __tgamma(double x0) {
        var mh$ = __tgamma$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gamma$MH() {
        return RuntimeHelper.requireNonNull(constants$25.const$2,"gamma");
    }
    /**
     * {@snippet :
     * double gamma(double);
     * }
     */
    public static double gamma(double x0) {
        var mh$ = gamma$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __gamma$MH() {
        return RuntimeHelper.requireNonNull(constants$25.const$3,"__gamma");
    }
    /**
     * {@snippet :
     * double __gamma(double);
     * }
     */
    public static double __gamma(double x0) {
        var mh$ = __gamma$MH();
        try {
            return (double)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lgamma_r$MH() {
        return RuntimeHelper.requireNonNull(constants$25.const$4,"lgamma_r");
    }
    /**
     * {@snippet :
     * double lgamma_r(double, int* __signgamp);
     * }
     */
    public static double lgamma_r(double x0, MemorySegment __signgamp) {
        var mh$ = lgamma_r$MH();
        try {
            return (double)mh$.invokeExact(x0, __signgamp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __lgamma_r$MH() {
        return RuntimeHelper.requireNonNull(constants$25.const$5,"__lgamma_r");
    }
    /**
     * {@snippet :
     * double __lgamma_r(double, int* __signgamp);
     * }
     */
    public static double __lgamma_r(double x0, MemorySegment __signgamp) {
        var mh$ = __lgamma_r$MH();
        try {
            return (double)mh$.invokeExact(x0, __signgamp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rint$MH() {
        return RuntimeHelper.requireNonNull(constants$26.const$0,"rint");
    }
    /**
     * {@snippet :
     * double rint(double __x);
     * }
     */
    public static double rint(double __x) {
        var mh$ = rint$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __rint$MH() {
        return RuntimeHelper.requireNonNull(constants$26.const$1,"__rint");
    }
    /**
     * {@snippet :
     * double __rint(double __x);
     * }
     */
    public static double __rint(double __x) {
        var mh$ = __rint$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle nextafter$MH() {
        return RuntimeHelper.requireNonNull(constants$26.const$2,"nextafter");
    }
    /**
     * {@snippet :
     * double nextafter(double __x, double __y);
     * }
     */
    public static double nextafter(double __x, double __y) {
        var mh$ = nextafter$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __nextafter$MH() {
        return RuntimeHelper.requireNonNull(constants$26.const$3,"__nextafter");
    }
    /**
     * {@snippet :
     * double __nextafter(double __x, double __y);
     * }
     */
    public static double __nextafter(double __x, double __y) {
        var mh$ = __nextafter$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle remainder$MH() {
        return RuntimeHelper.requireNonNull(constants$26.const$4,"remainder");
    }
    /**
     * {@snippet :
     * double remainder(double __x, double __y);
     * }
     */
    public static double remainder(double __x, double __y) {
        var mh$ = remainder$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __remainder$MH() {
        return RuntimeHelper.requireNonNull(constants$26.const$5,"__remainder");
    }
    /**
     * {@snippet :
     * double __remainder(double __x, double __y);
     * }
     */
    public static double __remainder(double __x, double __y) {
        var mh$ = __remainder$MH();
        try {
            return (double)mh$.invokeExact(__x, __y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle scalbn$MH() {
        return RuntimeHelper.requireNonNull(constants$27.const$0,"scalbn");
    }
    /**
     * {@snippet :
     * double scalbn(double __x, int __n);
     * }
     */
    public static double scalbn(double __x, int __n) {
        var mh$ = scalbn$MH();
        try {
            return (double)mh$.invokeExact(__x, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __scalbn$MH() {
        return RuntimeHelper.requireNonNull(constants$27.const$1,"__scalbn");
    }
    /**
     * {@snippet :
     * double __scalbn(double __x, int __n);
     * }
     */
    public static double __scalbn(double __x, int __n) {
        var mh$ = __scalbn$MH();
        try {
            return (double)mh$.invokeExact(__x, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ilogb$MH() {
        return RuntimeHelper.requireNonNull(constants$27.const$2,"ilogb");
    }
    /**
     * {@snippet :
     * int ilogb(double __x);
     * }
     */
    public static int ilogb(double __x) {
        var mh$ = ilogb$MH();
        try {
            return (int)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ilogb$MH() {
        return RuntimeHelper.requireNonNull(constants$27.const$3,"__ilogb");
    }
    /**
     * {@snippet :
     * int __ilogb(double __x);
     * }
     */
    public static int __ilogb(double __x) {
        var mh$ = __ilogb$MH();
        try {
            return (int)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle scalbln$MH() {
        return RuntimeHelper.requireNonNull(constants$27.const$5,"scalbln");
    }
    /**
     * {@snippet :
     * double scalbln(double __x, long __n);
     * }
     */
    public static double scalbln(double __x, long __n) {
        var mh$ = scalbln$MH();
        try {
            return (double)mh$.invokeExact(__x, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __scalbln$MH() {
        return RuntimeHelper.requireNonNull(constants$28.const$0,"__scalbln");
    }
    /**
     * {@snippet :
     * double __scalbln(double __x, long __n);
     * }
     */
    public static double __scalbln(double __x, long __n) {
        var mh$ = __scalbln$MH();
        try {
            return (double)mh$.invokeExact(__x, __n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle nearbyint$MH() {
        return RuntimeHelper.requireNonNull(constants$28.const$1,"nearbyint");
    }
    /**
     * {@snippet :
     * double nearbyint(double __x);
     * }
     */
    public static double nearbyint(double __x) {
        var mh$ = nearbyint$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __nearbyint$MH() {
        return RuntimeHelper.requireNonNull(constants$28.const$2,"__nearbyint");
    }
    /**
     * {@snippet :
     * double __nearbyint(double __x);
     * }
     */
    public static double __nearbyint(double __x) {
        var mh$ = __nearbyint$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle round$MH() {
        return RuntimeHelper.requireNonNull(constants$28.const$3,"round");
    }
    /**
     * {@snippet :
     * double round(double __x);
     * }
     */
    public static double round(double __x) {
        var mh$ = round$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __round$MH() {
        return RuntimeHelper.requireNonNull(constants$28.const$4,"__round");
    }
    /**
     * {@snippet :
     * double __round(double __x);
     * }
     */
    public static double __round(double __x) {
        var mh$ = __round$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle trunc$MH() {
        return RuntimeHelper.requireNonNull(constants$28.const$5,"trunc");
    }
    /**
     * {@snippet :
     * double trunc(double __x);
     * }
     */
    public static double trunc(double __x) {
        var mh$ = trunc$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __trunc$MH() {
        return RuntimeHelper.requireNonNull(constants$29.const$0,"__trunc");
    }
    /**
     * {@snippet :
     * double __trunc(double __x);
     * }
     */
    public static double __trunc(double __x) {
        var mh$ = __trunc$MH();
        try {
            return (double)mh$.invokeExact(__x);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle remquo$MH() {
        return RuntimeHelper.requireNonNull(constants$29.const$2,"remquo");
    }
    /**
     * {@snippet :
     * double remquo(double __x, double __y, int* __quo);
     * }
     */
    public static double remquo(double __x, double __y, MemorySegment __quo) {
        var mh$ = remquo$MH();
        try {
            return (double)mh$.invokeExact(__x, __y, __quo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


